<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AviationData' inline='true' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AviationData' name='textscan.11a1uid1dbgtg519vtdii0dgdish'>
            <connection class='textscan' directory='C:/Users/ericg/Documents/data/data_cleaning_project_airport' filename='AviationData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11a1uid1dbgtg519vtdii0dgdish' name='AviationData.csv' table='[AviationData#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
            <column datatype='string' name='Event.Id' ordinal='0' />
            <column datatype='string' name='Investigation.Type' ordinal='1' />
            <column datatype='string' name='Accident.Number' ordinal='2' />
            <column datatype='date' name='Event.Date' ordinal='3' />
            <column datatype='string' name='Location' ordinal='4' />
            <column datatype='string' name='Country' ordinal='5' />
            <column datatype='real' name='Latitude' ordinal='6' />
            <column datatype='real' name='Longitude' ordinal='7' />
            <column datatype='string' name='Airport.Code' ordinal='8' />
            <column datatype='string' name='Airport.Name' ordinal='9' />
            <column datatype='string' name='Injury.Severity' ordinal='10' />
            <column datatype='string' name='Aircraft.damage' ordinal='11' />
            <column datatype='string' name='Aircraft.Category' ordinal='12' />
            <column datatype='string' name='Registration.Number' ordinal='13' />
            <column datatype='string' name='Make' ordinal='14' />
            <column datatype='string' name='Model' ordinal='15' />
            <column datatype='string' name='Amateur.Built' ordinal='16' />
            <column datatype='integer' name='Number.of.Engines' ordinal='17' />
            <column datatype='string' name='Engine.Type' ordinal='18' />
            <column datatype='string' name='FAR.Description' ordinal='19' />
            <column datatype='string' name='Schedule' ordinal='20' />
            <column datatype='string' name='Purpose.of.flight' ordinal='21' />
            <column datatype='string' name='Air.carrier' ordinal='22' />
            <column datatype='integer' name='Total.Fatal.Injuries' ordinal='23' />
            <column datatype='integer' name='Total.Serious.Injuries' ordinal='24' />
            <column datatype='integer' name='Total.Minor.Injuries' ordinal='25' />
            <column datatype='integer' name='Total.Uninjured' ordinal='26' />
            <column datatype='string' name='Weather.Condition' ordinal='27' />
            <column datatype='string' name='Broad.phase.of.flight' ordinal='28' />
            <column datatype='string' name='Report.Status' ordinal='29' />
            <column datatype='date' name='Publication.Date' ordinal='30' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Ksh&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_KE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event.Id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event.Id]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Event.Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investigation.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Investigation.Type]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Investigation.Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Accident.Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Accident.Number]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Accident.Number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event.Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Event.Date]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Event.Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport.Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport.Code]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Airport.Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport.Name]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Airport.Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Injury.Severity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Injury.Severity]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Injury.Severity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft.damage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Aircraft.damage]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Aircraft.damage</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft.Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Aircraft.Category]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Aircraft.Category</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Registration.Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Registration.Number]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Registration.Number</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amateur.Built</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Amateur.Built]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Amateur.Built</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number.of.Engines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number.of.Engines]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Number.of.Engines</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Engine.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Engine.Type]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Engine.Type</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FAR.Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FAR.Description]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>FAR.Description</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Schedule</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Schedule]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Schedule</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purpose.of.flight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Purpose.of.flight]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Purpose.of.flight</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Air.carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Air.carrier]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Air.carrier</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Fatal.Injuries</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total.Fatal.Injuries]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Total.Fatal.Injuries</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Serious.Injuries</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total.Serious.Injuries]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Total.Serious.Injuries</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Minor.Injuries</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total.Minor.Injuries]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Total.Minor.Injuries</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Uninjured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total.Uninjured]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Total.Uninjured</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weather.Condition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weather.Condition]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Weather.Condition</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Broad.phase.of.flight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Broad.phase.of.flight]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Broad.phase.of.flight</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Report.Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Report.Status]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Report.Status</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Publication.Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Publication.Date]</local-name>
            <parent-name>[AviationData.csv]</parent-name>
            <remote-alias>Publication.Date</remote-alias>
            <ordinal>30</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft.damage]' role='dimension' type='nominal' />
      <column datatype='string' name='[Amateur.Built]' role='dimension' type='nominal' />
      <column caption='total inturies' datatype='integer' name='[Calculation_1299570028727869440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total.Fatal.Injuries] +  [Total.Serious.Injuries] + [Total.Minor.Injuries]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Purpose.of.flight]' role='dimension' type='nominal' />
      <column datatype='string' name='[Weather.Condition]' role='dimension' type='nominal' />
      <column caption='AviationData.csv' datatype='table' name='[__tableau_internal_object_id__].[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]' role='measure' type='quantitative' />
      <column-instance column='[Aircraft.damage]' derivation='None' name='[none:Aircraft.damage:nk]' pivot='key' type='nominal' />
      <column-instance column='[Amateur.Built]' derivation='None' name='[none:Amateur.Built:nk]' pivot='key' type='nominal' />
      <column-instance column='[Purpose.of.flight]' derivation='None' name='[none:Purpose.of.flight:nk]' pivot='key' type='nominal' />
      <column-instance column='[Weather.Condition]' derivation='None' name='[none:Weather.Condition:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Aircraft.damage,Amateur.Built)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Aircraft.damage:nk]' />
          <groupfilter function='level-members' level='[none:Amateur.Built:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, US_State'>
          <field>[Country]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ericg/AppData/Local/Temp/TableauTemp/#TableauTemp_0l4vxpd0co6c3211k6n1g101uvg2.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/26/2025 04:55:26 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Event.Id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Event.Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Event.Id</remote-alias>
              <ordinal>0</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>88889</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Investigation.Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Investigation.Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Investigation.Type</remote-alias>
              <ordinal>1</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Accident.Number</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Accident.Number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Accident.Number</remote-alias>
              <ordinal>2</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>88889</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Event.Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Event.Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Event.Date</remote-alias>
              <ordinal>3</ordinal>
              <family>AviationData.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>21167</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>4</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16554</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>5</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>231</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>6</ordinal>
              <family>AviationData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18837</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>7</ordinal>
              <family>AviationData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18837</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Airport.Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport.Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport.Code</remote-alias>
              <ordinal>8</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11240</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Airport.Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Airport.Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Airport.Name</remote-alias>
              <ordinal>9</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15922</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Injury.Severity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Injury.Severity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Injury.Severity</remote-alias>
              <ordinal>10</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Aircraft.damage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Aircraft.damage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Aircraft.damage</remote-alias>
              <ordinal>11</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Aircraft.Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Aircraft.Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Aircraft.Category</remote-alias>
              <ordinal>12</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Registration.Number</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Registration.Number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Registration.Number</remote-alias>
              <ordinal>13</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>78920</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Make</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Make]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Make</remote-alias>
              <ordinal>14</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2633</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model</remote-alias>
              <ordinal>15</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5232</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Amateur.Built</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Amateur.Built]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Amateur.Built</remote-alias>
              <ordinal>16</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number.of.Engines</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number.of.Engines]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number.of.Engines</remote-alias>
              <ordinal>17</ordinal>
              <family>AviationData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Engine.Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Engine.Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Engine.Type</remote-alias>
              <ordinal>18</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FAR.Description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FAR.Description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FAR.Description</remote-alias>
              <ordinal>19</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Schedule</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Schedule]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Schedule</remote-alias>
              <ordinal>20</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Purpose.of.flight</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Purpose.of.flight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Purpose.of.flight</remote-alias>
              <ordinal>21</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Air.carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Air.carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Air.carrier</remote-alias>
              <ordinal>22</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13623</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total.Fatal.Injuries</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total.Fatal.Injuries]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total.Fatal.Injuries</remote-alias>
              <ordinal>23</ordinal>
              <family>AviationData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total.Serious.Injuries</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total.Serious.Injuries]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total.Serious.Injuries</remote-alias>
              <ordinal>24</ordinal>
              <family>AviationData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total.Minor.Injuries</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total.Minor.Injuries]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total.Minor.Injuries</remote-alias>
              <ordinal>25</ordinal>
              <family>AviationData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total.Uninjured</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total.Uninjured]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total.Uninjured</remote-alias>
              <ordinal>26</ordinal>
              <family>AviationData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>655</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Weather.Condition</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Weather.Condition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Weather.Condition</remote-alias>
              <ordinal>27</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Broad.phase.of.flight</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Broad.phase.of.flight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Broad.phase.of.flight</remote-alias>
              <ordinal>28</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Report.Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Report.Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Report.Status</remote-alias>
              <ordinal>29</ordinal>
              <family>AviationData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14188</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Publication.Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Publication.Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Publication.Date</remote-alias>
              <ordinal>30</ordinal>
              <family>AviationData.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2681</approx-count>
              <contains-null>true</contains-null>
              <object-id>[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Amateur.Built:nk]' type='palette'>
            <map to='#b07aa1'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Purpose.of.flight:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aerial Observation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Firefighting&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Personal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Air Drop&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Positioning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Public Aircraft - Federal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Other Work Use&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Air Race/show&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aerial Application&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ASHO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Banner Tow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Executive/corporate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;External Load&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Air Race show&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Public Aircraft - State&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Glider Tow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flight Test&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Public Aircraft&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Instructional&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PUBS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Public Aircraft - Local&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Skydiving&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PUBL&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Weather.Condition:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VMC&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;UNK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IMC&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Aircraft.damage:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#aa0000'>
              <bucket>&quot;Destroyed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Substantial&quot;</bucket>
            </map>
            <map to='#ffaa7f'>
              <bucket>&quot;Minor&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Kenya&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Event.Id' />
        <field-sort-custom-order field='Investigation.Type' />
        <field-sort-custom-order field='Accident.Number' />
        <field-sort-custom-order field='Event.Date' />
        <field-sort-custom-order field='Location' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Latitude' />
        <field-sort-custom-order field='Longitude' />
        <field-sort-custom-order field='Airport.Code' />
        <field-sort-custom-order field='Airport.Name' />
        <field-sort-custom-order field='Injury.Severity' />
        <field-sort-custom-order field='Aircraft.damage' />
        <field-sort-custom-order field='Aircraft.Category' />
        <field-sort-custom-order field='Registration.Number' />
        <field-sort-custom-order field='Make' />
        <field-sort-custom-order field='Model' />
        <field-sort-custom-order field='Amateur.Built' />
        <field-sort-custom-order field='Number.of.Engines' />
        <field-sort-custom-order field='Engine.Type' />
        <field-sort-custom-order field='FAR.Description' />
        <field-sort-custom-order field='Schedule' />
        <field-sort-custom-order field='Purpose.of.flight' />
        <field-sort-custom-order field='Air.carrier' />
        <field-sort-custom-order field='Total.Fatal.Injuries' />
        <field-sort-custom-order field='Calculation_1299570028727869440' />
        <field-sort-custom-order field='Total.Serious.Injuries' />
        <field-sort-custom-order field='Total.Minor.Injuries' />
        <field-sort-custom-order field='Total.Uninjured' />
        <field-sort-custom-order field='Weather.Condition' />
        <field-sort-custom-order field='Broad.phase.of.flight' />
        <field-sort-custom-order field='Report.Status' />
        <field-sort-custom-order field='Publication.Date' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='AviationData.csv' id='AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8'>
            <properties context=''>
              <relation connection='textscan.11a1uid1dbgtg519vtdii0dgdish' name='AviationData.csv' table='[AviationData#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
                  <column datatype='string' name='Event.Id' ordinal='0' />
                  <column datatype='string' name='Investigation.Type' ordinal='1' />
                  <column datatype='string' name='Accident.Number' ordinal='2' />
                  <column datatype='date' name='Event.Date' ordinal='3' />
                  <column datatype='string' name='Location' ordinal='4' />
                  <column datatype='string' name='Country' ordinal='5' />
                  <column datatype='real' name='Latitude' ordinal='6' />
                  <column datatype='real' name='Longitude' ordinal='7' />
                  <column datatype='string' name='Airport.Code' ordinal='8' />
                  <column datatype='string' name='Airport.Name' ordinal='9' />
                  <column datatype='string' name='Injury.Severity' ordinal='10' />
                  <column datatype='string' name='Aircraft.damage' ordinal='11' />
                  <column datatype='string' name='Aircraft.Category' ordinal='12' />
                  <column datatype='string' name='Registration.Number' ordinal='13' />
                  <column datatype='string' name='Make' ordinal='14' />
                  <column datatype='string' name='Model' ordinal='15' />
                  <column datatype='string' name='Amateur.Built' ordinal='16' />
                  <column datatype='integer' name='Number.of.Engines' ordinal='17' />
                  <column datatype='string' name='Engine.Type' ordinal='18' />
                  <column datatype='string' name='FAR.Description' ordinal='19' />
                  <column datatype='string' name='Schedule' ordinal='20' />
                  <column datatype='string' name='Purpose.of.flight' ordinal='21' />
                  <column datatype='string' name='Air.carrier' ordinal='22' />
                  <column datatype='integer' name='Total.Fatal.Injuries' ordinal='23' />
                  <column datatype='integer' name='Total.Serious.Injuries' ordinal='24' />
                  <column datatype='integer' name='Total.Minor.Injuries' ordinal='25' />
                  <column datatype='integer' name='Total.Uninjured' ordinal='26' />
                  <column datatype='string' name='Weather.Condition' ordinal='27' />
                  <column datatype='string' name='Broad.phase.of.flight' ordinal='28' />
                  <column datatype='string' name='Report.Status' ordinal='29' />
                  <column datatype='date' name='Publication.Date' ordinal='30' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_8F6E07AF082A4BD889099C4FDA2B9C44]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='ameteur or not' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Amateur.Built' />
        <param name='target' value='ameteur or not' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_F00D770CA875488586BA7C34B5712DA3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='category vs damage' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Aircraft.damage' />
        <param name='target' value='category vs damage' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action3_7FD1420219784A86A5D076D897ACA54A]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='country and weather' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Weather.Condition' />
        <param name='target' value='country and weather' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='aircraft damage vs injuries'>
      <table>
        <view>
          <datasources>
            <datasource caption='AviationData' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' />
          </datasources>
          <datasource-dependencies datasource='federated.00qjvok1xkdcw015n2sbx1f4r4fh'>
            <column datatype='string' name='[Aircraft.damage]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total.Fatal.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Minor.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Serious.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Uninjured]' role='measure' type='quantitative' />
            <column-instance column='[Aircraft.damage]' derivation='None' name='[none:Aircraft.damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total.Fatal.Injuries]' derivation='Sum' name='[sum:Total.Fatal.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Minor.Injuries]' derivation='Sum' name='[sum:Total.Minor.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Serious.Injuries]' derivation='Sum' name='[sum:Total.Serious.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Uninjured]' derivation='Sum' name='[sum:Total.Uninjured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Total.Fatal.Injuries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Total.Minor.Injuries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Total.Serious.Injuries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Total.Uninjured:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Aircraft.damage:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]</column>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Multiple Values]</rows>
        <cols>([federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk] / [federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{2AC31714-0DA2-43F7-96BA-DECD13D0B170}' />
    </worksheet>
    <worksheet name='ameteur or not'>
      <layout-options>
        <title>
          <formatted-text>
            <run>most non ameteur built encure more damage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AviationData' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' />
          </datasources>
          <datasource-dependencies datasource='federated.00qjvok1xkdcw015n2sbx1f4r4fh'>
            <column datatype='string' name='[Aircraft.damage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Amateur.Built]' role='dimension' type='nominal' />
            <column caption='total inturies' datatype='integer' name='[Calculation_1299570028727869440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total.Fatal.Injuries] +  [Total.Serious.Injuries] + [Total.Minor.Injuries]' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number.of.Engines]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Fatal.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Minor.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Serious.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Uninjured]' role='measure' type='quantitative' />
            <column caption='AviationData.csv' datatype='table' name='[__tableau_internal_object_id__].[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aircraft.damage]' derivation='None' name='[none:Aircraft.damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amateur.Built]' derivation='None' name='[none:Amateur.Built:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1299570028727869440]' derivation='Sum' name='[sum:Calculation_1299570028727869440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number.of.Engines]' derivation='Sum' name='[sum:Number.of.Engines:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Fatal.Injuries]' derivation='Sum' name='[sum:Total.Fatal.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Minor.Injuries]' derivation='Sum' name='[sum:Total.Minor.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Serious.Injuries]' derivation='Sum' name='[sum:Total.Serious.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Uninjured]' derivation='Sum' name='[sum:Total.Uninjured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Exclusions (Aircraft.damage,Amateur.Built)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Aircraft.damage:nk]' />
                <groupfilter function='level-members' level='[none:Amateur.Built:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='%null%' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Amateur.Built:nk]' member='&quot;No&quot;' />
                    <groupfilter function='member' level='[none:Amateur.Built:nk]' member='&quot;Yes&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='&quot;Unknown&quot;' />
                  <groupfilter function='member' level='[none:Amateur.Built:nk]' member='&quot;No&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Aircraft.damage:nk]' />
              <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='&quot;Unknown&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Amateur.Built:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Amateur.Built:nk]' />
              <groupfilter function='member' level='[none:Amateur.Built:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Amateur.Built:nk]</column>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Exclusions (Aircraft.damage,Amateur.Built)]</column>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]</column>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Amateur.Built:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Multiple Values]</rows>
        <cols>([federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Amateur.Built:nk] / [federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk])</cols>
      </table>
      <simple-id uuid='{0A2EF209-A8EA-47EE-8098-7635C17051F4}' />
    </worksheet>
    <worksheet name='carrier vs damage'>
      <table>
        <view>
          <datasources>
            <datasource caption='AviationData' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00qjvok1xkdcw015n2sbx1f4r4fh'>
            <column datatype='string' name='[Air.carrier]' role='dimension' type='nominal' />
            <column datatype='string' name='[Aircraft.damage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Air.carrier]' derivation='None' name='[none:Air.carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[Aircraft.damage]' derivation='None' name='[none:Aircraft.damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Air.carrier:nk]'>
            <groupfilter function='level-members' level='[none:Air.carrier:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Aircraft.damage:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Air.carrier:nk]</column>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[avg:Longitude:qk]' field-type='quantitative' max='7902117.5185186826' min='-30529198.961302973' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[avg:Latitude:qk]' field-type='quantitative' max='23403338.609453097' min='-12445017.536339913' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]' />
              <text column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Air.carrier:nk]' />
              <lod column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[avg:Latitude:qk]</rows>
        <cols>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{9A341290-C895-4757-A369-851B8CE684D6}' />
    </worksheet>
    <worksheet name='category vs damage'>
      <layout-options>
        <title>
          <formatted-text>
            <run>airplanes make up majority of the dataset</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AviationData' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' />
          </datasources>
          <datasource-dependencies datasource='federated.00qjvok1xkdcw015n2sbx1f4r4fh'>
            <column datatype='string' name='[Aircraft.Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Aircraft.damage]' role='dimension' type='nominal' />
            <column caption='total inturies' datatype='integer' name='[Calculation_1299570028727869440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total.Fatal.Injuries] +  [Total.Serious.Injuries] + [Total.Minor.Injuries]' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number.of.Engines]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Fatal.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Minor.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Serious.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Uninjured]' role='measure' type='quantitative' />
            <column caption='AviationData.csv' datatype='table' name='[__tableau_internal_object_id__].[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aircraft.Category]' derivation='None' name='[none:Aircraft.Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Aircraft.damage]' derivation='None' name='[none:Aircraft.damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1299570028727869440]' derivation='Sum' name='[sum:Calculation_1299570028727869440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number.of.Engines]' derivation='Sum' name='[sum:Number.of.Engines:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Fatal.Injuries]' derivation='Sum' name='[sum:Total.Fatal.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Minor.Injuries]' derivation='Sum' name='[sum:Total.Minor.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Serious.Injuries]' derivation='Sum' name='[sum:Total.Serious.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Uninjured]' derivation='Sum' name='[sum:Total.Uninjured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Aircraft.Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Blimp&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Glider&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Gyrocraft&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Powered Parachute&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Powered-Lift&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Rocket&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;ULTR&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Ultralight&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;UNK&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Unknown&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Weight-Shift&quot;' />
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;WSFT&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Airplane&quot;</bucket>
              <bucket>&quot;Balloon&quot;</bucket>
              <bucket>&quot;Helicopter&quot;</bucket>
              <bucket>&quot;Blimp&quot;</bucket>
              <bucket>&quot;Glider&quot;</bucket>
              <bucket>&quot;Gyrocraft&quot;</bucket>
              <bucket>&quot;Powered Parachute&quot;</bucket>
              <bucket>&quot;Powered-Lift&quot;</bucket>
              <bucket>&quot;Rocket&quot;</bucket>
              <bucket>&quot;ULTR&quot;</bucket>
              <bucket>&quot;Ultralight&quot;</bucket>
              <bucket>&quot;UNK&quot;</bucket>
              <bucket>&quot;Unknown&quot;</bucket>
              <bucket>&quot;Weight-Shift&quot;</bucket>
              <bucket>&quot;WSFT&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Aircraft.damage:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Destroyed&quot;</bucket>
              <bucket>&quot;Minor&quot;</bucket>
              <bucket>&quot;Substantial&quot;</bucket>
              <bucket>&quot;Unknown&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]</column>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.Category:nk]</column>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Multiple Values]</rows>
        <cols>([federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.Category:nk] / [federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk])</cols>
      </table>
      <simple-id uuid='{CD711084-3579-4746-A9E5-F78B95DB0253}' />
    </worksheet>
    <worksheet name='country and weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='AviationData' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00qjvok1xkdcw015n2sbx1f4r4fh'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[Weather.Condition]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Weather.Condition]' derivation='None' name='[none:Weather.Condition:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Weather.Condition:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Weather.Condition:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Weather.Condition:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Weather.Condition:nk]' member='&quot;Unk&quot;' />
                <groupfilter function='member' level='[none:Weather.Condition:nk]' member='&quot;UNK&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Weather.Condition:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Longitude (generated)]' field-type='quantitative' max='8222249.0039137509' min='-12008434.899001429' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Latitude (generated)]' field-type='quantitative' max='10286000.742559683' min='-7069796.1323681874' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Weather.Condition:nk]' />
              <text column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Location:nk]' />
              <lod column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Latitude (generated)]</rows>
        <cols>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6079A518-D017-4B6A-AA7F-F793BA3DB1F3}' />
    </worksheet>
    <worksheet name='phase of flight vs accident'>
      <table>
        <view>
          <datasources>
            <datasource caption='AviationData' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' />
          </datasources>
          <datasource-dependencies datasource='federated.00qjvok1xkdcw015n2sbx1f4r4fh'>
            <column datatype='string' name='[Broad.phase.of.flight]' role='dimension' type='nominal' />
            <column caption='total inturies' datatype='integer' name='[Calculation_1299570028727869440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total.Fatal.Injuries] +  [Total.Serious.Injuries] + [Total.Minor.Injuries]' />
            </column>
            <column datatype='integer' name='[Total.Fatal.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Minor.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Serious.Injuries]' role='measure' type='quantitative' />
            <column-instance column='[Broad.phase.of.flight]' derivation='None' name='[none:Broad.phase.of.flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1299570028727869440]' derivation='Sum' name='[sum:Calculation_1299570028727869440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Broad.phase.of.flight:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Broad.phase.of.flight:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Broad.phase.of.flight:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Broad.phase.of.flight:nk]' member='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Broad.phase.of.flight:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Broad.phase.of.flight:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]</rows>
        <cols>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Broad.phase.of.flight:nk]</cols>
      </table>
      <simple-id uuid='{FB68B8D6-0996-4579-8B07-A31AA82BCB7E}' />
    </worksheet>
    <worksheet name='purpose of flight'>
      <table>
        <view>
          <datasources>
            <datasource caption='AviationData' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' />
          </datasources>
          <datasource-dependencies datasource='federated.00qjvok1xkdcw015n2sbx1f4r4fh'>
            <column caption='total inturies' datatype='integer' name='[Calculation_1299570028727869440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total.Fatal.Injuries] +  [Total.Serious.Injuries] + [Total.Minor.Injuries]' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number.of.Engines]' role='measure' type='quantitative' />
            <column datatype='string' name='[Purpose.of.flight]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total.Fatal.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Minor.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Serious.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Uninjured]' role='measure' type='quantitative' />
            <column caption='AviationData.csv' datatype='table' name='[__tableau_internal_object_id__].[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:AviationData.csv_7C677C52EBF3446CBACF7F60EC426CA8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purpose.of.flight]' derivation='None' name='[none:Purpose.of.flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1299570028727869440]' derivation='Sum' name='[sum:Calculation_1299570028727869440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number.of.Engines]' derivation='Sum' name='[sum:Number.of.Engines:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Fatal.Injuries]' derivation='Sum' name='[sum:Total.Fatal.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Minor.Injuries]' derivation='Sum' name='[sum:Total.Minor.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Serious.Injuries]' derivation='Sum' name='[sum:Total.Serious.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Uninjured]' derivation='Sum' name='[sum:Total.Uninjured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Purpose.of.flight:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Air Drop&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Air Race show&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Air Race/show&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;ASHO&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Firefighting&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Flight Test&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Glider Tow&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Other Work Use&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;PUBL&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Public Aircraft&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Public Aircraft - Federal&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Public Aircraft - Local&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Public Aircraft - State&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;PUBS&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Skydiving&quot;' />
                <groupfilter function='member' level='[none:Purpose.of.flight:nk]' member='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Personal&quot;</bucket>
              <bucket>&quot;Aerial Application&quot;</bucket>
              <bucket>&quot;Instructional&quot;</bucket>
              <bucket>&quot;Business&quot;</bucket>
              <bucket>&quot;Positioning&quot;</bucket>
              <bucket>&quot;Other Work Use&quot;</bucket>
              <bucket>&quot;Executive/corporate&quot;</bucket>
              <bucket>&quot;Public Aircraft&quot;</bucket>
              <bucket>&quot;Aerial Observation&quot;</bucket>
              <bucket>&quot;Ferry&quot;</bucket>
              <bucket>&quot;Flight Test&quot;</bucket>
              <bucket>&quot;Skydiving&quot;</bucket>
              <bucket>&quot;Public Aircraft - Federal&quot;</bucket>
              <bucket>&quot;External Load&quot;</bucket>
              <bucket>&quot;Air Race show&quot;</bucket>
              <bucket>&quot;Public Aircraft - Local&quot;</bucket>
              <bucket>&quot;Banner Tow&quot;</bucket>
              <bucket>&quot;Public Aircraft - State&quot;</bucket>
              <bucket>&quot;Air Race/show&quot;</bucket>
              <bucket>&quot;Glider Tow&quot;</bucket>
              <bucket>&quot;Firefighting&quot;</bucket>
              <bucket>&quot;ASHO&quot;</bucket>
              <bucket>&quot;PUBS&quot;</bucket>
              <bucket>&quot;PUBL&quot;</bucket>
              <bucket>&quot;Air Drop&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Unknown&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]</column>
            <column>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[Multiple Values]</rows>
        <cols>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]</cols>
      </table>
      <simple-id uuid='{5F9A64F4-3048-4620-979D-BBD83D2F01DD}' />
    </worksheet>
    <worksheet name='total number of injuries per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='AviationData' name='federated.00qjvok1xkdcw015n2sbx1f4r4fh' />
          </datasources>
          <datasource-dependencies datasource='federated.00qjvok1xkdcw015n2sbx1f4r4fh'>
            <column caption='total inturies' datatype='integer' name='[Calculation_1299570028727869440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total.Fatal.Injuries] +  [Total.Serious.Injuries] + [Total.Minor.Injuries]' />
            </column>
            <column datatype='date' name='[Event.Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Total.Fatal.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Minor.Injuries]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total.Serious.Injuries]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1299570028727869440]' derivation='Sum' name='[sum:Calculation_1299570028727869440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Event.Date]' derivation='Year-Trunc' name='[tyr:Event.Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]</rows>
        <cols>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[tyr:Event.Date:qk]</cols>
      </table>
      <simple-id uuid='{DEAD01F8-F5AC-47C0-93BD-3161B51C4D52}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' underline='true'>Aviation_Accident</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5eddc' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97058' id='21' param='vert' type-v2='layout-flow' w='98376' x='812' y='1471'>
            <zone h='7721' id='22' type-v2='title' w='98376' x='812' y='1471'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='89337' id='19' type-v2='layout-basic' w='98376' x='812' y='9192'>
              <zone h='44668' id='3' param='horz' type-v2='layout-flow' w='64861' x='812' y='9192'>
                <zone fixed-size='262' h='44668' id='23' is-fixed='true' name='total number of injuries per year' show-title='false' w='27411' x='812' y='9192'>
                  <layout-cache minwidth='152' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='92' h='44668' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='9340' x='28223' y='9192'>
                  <zone h='11167' id='13' name='country and weather' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Weather.Condition:nk]' type-v2='color' w='9340' x='28223' y='9192'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='11167' id='24' name='total number of injuries per year' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' type-v2='color' w='9340' x='28223' y='20359'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='11167' id='27' name='aircraft damage vs injuries' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]' type-v2='color' w='9340' x='28223' y='31526'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='11167' id='29' name='carrier vs damage' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]' type-v2='color' w='9340' x='28223' y='42693'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='44668' id='11' param='horz' type-v2='layout-flow' w='28110' x='37563' y='9192'>
                  <zone h='44668' id='28' name='carrier vs damage' w='14055' x='37563' y='9192'>
                    <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44668' id='12' name='country and weather' w='14055' x='51618' y='9192'>
                    <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='44668' id='5' param='horz' type-v2='layout-flow' w='16758' x='82430' y='9192'>
                <zone h='44668' id='10' name='ameteur or not' show-title='false' w='16758' x='82430' y='9192'>
                  <layout-cache cell-count-w='6' minheight='199' non-cell-size-w='67' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='44669' id='15' name='purpose of flight' show-title='false' w='26127' x='13420' y='53860'>
                <layout-cache minheight='223' type-h='scalable' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44669' id='17' name='purpose of flight' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]' type-v2='color' w='12608' x='812' y='53860'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44669' id='9' name='category vs damage' show-title='false' w='33514' x='65674' y='53860'>
                <layout-cache cell-count-w='11' minheight='258' non-cell-size-w='75' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44668' id='25' name='phase of flight vs accident' show-title='false' w='16757' x='65673' y='9192'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44669' id='26' name='aircraft damage vs injuries' show-title='false' w='26127' x='39547' y='53860'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1' underline='true'>Aviation_Accident</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2750' minheight='2750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97058' id='30' param='vert' type-v2='layout-flow' w='98376' x='812' y='1471'>
                <zone h='7721' id='22' type-v2='title' w='98376' x='812' y='1471'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44668' id='23' is-fixed='true' name='total number of injuries per year' show-title='false' w='27411' x='812' y='9192'>
                  <layout-cache minwidth='152' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11167' id='24' name='total number of injuries per year' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' type-v2='color' w='9340' x='28223' y='20359'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44668' id='28' is-fixed='true' name='carrier vs damage' w='14055' x='37563' y='9192'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11167' id='29' name='carrier vs damage' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]' type-v2='color' w='9340' x='28223' y='42693'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44668' id='12' is-fixed='true' name='country and weather' w='14055' x='51618' y='9192'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11167' id='13' name='country and weather' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Weather.Condition:nk]' type-v2='color' w='9340' x='28223' y='9192'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44668' id='25' is-fixed='true' name='phase of flight vs accident' show-title='false' w='16757' x='65673' y='9192'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44668' id='10' is-fixed='true' name='ameteur or not' show-title='false' w='16758' x='82430' y='9192'>
                  <layout-cache cell-count-w='6' minheight='199' non-cell-size-w='67' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44669' id='15' is-fixed='true' name='purpose of flight' show-title='false' w='26127' x='13420' y='53860'>
                  <layout-cache minheight='223' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='44669' id='17' name='purpose of flight' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]' type-v2='color' w='12608' x='812' y='53860'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44669' id='26' is-fixed='true' name='aircraft damage vs injuries' show-title='false' w='26127' x='39547' y='53860'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11167' id='27' name='aircraft damage vs injuries' pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]' type-v2='color' w='9340' x='28223' y='31526'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44669' id='9' is-fixed='true' name='category vs damage' show-title='false' w='33514' x='65674' y='53860'>
                  <layout-cache cell-count-w='11' minheight='258' non-cell-size-w='75' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B0EA6CD4-3816-4AFE-B5DA-6CB7C25213C8}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='carrier vs damage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Air.carrier:nk]</field>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]</field>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{458D4E40-066E-4C9D-9FD2-5A33D0CF606B}' />
    </window>
    <window class='worksheet' name='country and weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Weather.Condition:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Country:nk]</field>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A897B4BD-DE72-480A-A1C6-9D71E0EA6025}' />
    </window>
    <window class='worksheet' name='category vs damage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC7B0C61-EF24-4855-BB3C-F2B73C0C73A1}' />
    </window>
    <window class='worksheet' name='ameteur or not'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Amateur.Built:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1694DDE3-E003-48A4-B34D-420184D546FA}' />
    </window>
    <window class='worksheet' name='purpose of flight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Purpose.of.flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8076C628-4CF7-47D8-B2B9-A53E1C8D576F}' />
    </window>
    <window class='worksheet' name='total number of injuries per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]</field>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[yr:Event.Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{96C85C74-1770-4ABE-8C93-F88597FB7348}' />
    </window>
    <window class='worksheet' name='phase of flight vs accident'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[sum:Calculation_1299570028727869440:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Broad.phase.of.flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9486842E-5329-48D8-B735-0775826642E9}' />
    </window>
    <window class='worksheet' name='aircraft damage vs injuries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='201'>
            <card pane-specification-id='0' param='[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]</field>
            <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96545BB4-2F1B-4E21-8E34-5520A523346C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='aircraft damage vs injuries'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='ameteur or not'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='carrier vs damage'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Aircraft.damage:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='category vs damage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='country and weather'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00qjvok1xkdcw015n2sbx1f4r4fh].[none:Weather.Condition:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='phase of flight vs accident'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='purpose of flight'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total number of injuries per year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='28' />
      <simple-id uuid='{7E3538DB-4D04-49BC-BBBD-868285D97661}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      X5OMRiFGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='aircraft damage vs injuries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ameteur or not' width='192'>
      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
      ZVDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA
      4WvHEACbpaUiDh4by/eZW9nBw6RaM7BaGvtN6V1UnB0dbg/gUSoUKJQM+rtD7NgJ0m6FnZrC
      /paHa+8zOj3V2SKFOIKOBsBs1tknzVC6Sqvh0DeQJ95SaJgGhbklhi7PkgwHpE2wtAk+Mzoa
      AK1WY2dzh92tPa5em6K13SDjVon15JmYvYjTrtAwuklFTKRN8MmWKZ6sowHID47yzuAolb19
      Mt1ZSoUlGqEc49kMUcUlFUlQbhukIvFOFivEMzuWAV/y3TkAhiemH07LZh78v1f6xBJniFwG
      Fb4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+JgEQviYBEL4mARC+
      1uFxgj2aTQ3TDZBJxdCbTWwlSCoRxrI8goqHjUI4KOMkibOhowGw2k2W10rohs5AXx+rG7uo
      OFy4NMLOhkfYq5AYGKU3JQEQZ0NnR4mMJbh4foyFe6t4LYPRmUkSrSpas8X9uQLDF88znoxI
      m2BpE3xmdDQAntVmrrDN9Mw09t4mRc0kYBsEE1HGp6YwmzVMp5eIIm2CT7pM8WSdHSm+qbG3
      t0ul2mDm4iRW4T5FNcG1wTSe4ZKJhtmttRnuSnSyWCGeWUcDEM/18vabvQ/f91x74eHrwQGA
      JLLpi7NELoMKX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIXzuW7tGFOC1e
      pYC38uGh55cAiOeKt7+Kd+sfDj2/HAIJX5MACF+TQyCf8Lbu4N76Xx1frjLxFurkux1f7kk5
      tgB4dptPPr2NoYZ55fo5ttddEsEqTrKPwZw02ztpnr4Pmzc6v+Du6R+e5ww7tgBo23sMXLpE
      Sq9SrWnslPaJ5VJcGY4BKigqKAFc1wPA9TzCyQixrhiqojyc9i1VUfAA75tpCgqKAp4HHgdM
      UxQUVcF23MeW9e3yHee7MjrK47EyFUVB+aZMJageuJ5PmnaYdQ8nQjiOy7d/GQyoD+twnMe6
      D8v4D/UMVJbw7v264+Upo6/hDF5/Ypk/dj0Vz/M829Qwte2OVrK+sc5+Ik9Sr9IOeKzO7RHr
      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
    </thumbnail>
    <thumbnail height='192' name='carrier vs damage' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='category vs damage' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='country and weather' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d7Rd133n99n7lNvvfR0PeOgAQZEAwV5EURJlUpRESbaaZVlusp2szCSa
      rBR7YifLWcsr8STOrCzP2J5xbMdjjzPWSJZkUTZlFauwUxQpsYAQCYIA0R9eu72dsvfOH+ec
      W17DAwhRIqWv1hN47z1ln31+e//67ydmZ18xQgQMoq0sHq8XMQAi+i4rDQczPoc6Lgh4U8pj
      xO0iMDzVLFANbdZCXmhyQoER1LHomOiiUoOW/ePeXqqRIrqOEBIhLIwxYAwABoNA8K16Gt+s
      ebt1cUexTloqtNY82BjnmmyTadcBIS988mVEqAxHO5KT/trz9qOKjNS8KdNkzAkRCYEAmoiO
      jFAYNAz8JpC0Q5tjnQJbUx1OeDmqofNaDx2A6/OLNEOXJZXCDoyiEho2p/zeAQtemjmlmQ1S
      ve9GZcgdpRoHpMvnlsZ4rF7grSXFbcUGb8qGVEObZ5tFXvTSK254XabB7aNVMILj3RyfL49G
      Pxj6c2TAlS435RvkbQ3GAmws4SJEdJDWGoBzgeBscGmEI6XLtZkWRzsuT7dtdqZDZoTEsqxL
      ut6lQGnD/RWHw10HhLjwCT9CKIqQn548z6jTReAisTEYDAoIMEKh8UBERJ/AABkLDrgLdHWK
      xbbNkXaa8FVuPNtTXeqhRVVtfDG1dZZ7p04yA9hHOxn+qZ7l9nyNm4sNLAG7Ml26RnJ/JVoA
      rtHcPVoGoSnaXSadgLKy0AgMhoId4gDnA4eU0IzIkHnlYGLqPt7NAFUQhh3pJncV4YH6CEqI
      oUVwqJ1j2vV5k92JdxGFNE7vACklRzsWC4E1vHguAk838zzfyhEYicBgm0tkJReAia+bLF6l
      FAB+6PPlWp7DXfeSxv9Dg4n+L20pirYPArTxMUS7vRFBvOub3nMlHNvQn2MhBGnL4+6x07yl
      NAc4HGkVeaQ+juLiF8OdxSoLvsOXa+MbPueYV6Diu4y6PnZbS/ZnGzzTznPcy1C0QzBw0k/3
      iCxrK2pBiq7rk5aGouUDaV7uZNiVqTLlhGQsi4w0bHc6vGu0yteq4zzbzgCQswzC2EhsEF1u
      yLd4pFFCmQEKELAr3eVYJ8NMyqNgRbt9SBOLbHQuoBD40fZyaRCCID45b4dszdZAbLrEi62E
      GVhQxhh8v4ttO2itmfUl32lmecF7fRG/IzRXZ+oshi4FO0AmBC1A0QWhl50hMISABGT83xGS
      TREhSNsewoTcUAyZSbV4qD7FGS97UWN7pFaiqvvSgCM0dxSrPFgbRQ9MckaG3Fwo81B1krwV
      MupGEo99U6GOkVWaYY4HamO80MklI+2hqhy+VitSsj1Oe2nKMbspKwshdEzYmk12l1uKdRCG
      EdsDMmDgg2MdbLIYDF2leaKZxU+If4AQXujkyMuQx+slCkLx5pF6b6dJFkDJ0uzP+Bxuvwoi
      MvCusXPYaCRppLh8crjWCqVCHCfinkZIvldRvOCnOek7IF87UetyQWjYlW5z0K0w4fRF5WjH
      X0788TlYEWcYIP7krP6/EtBofCZTPu8b7/L389s5F65cBDmp2OvWaQnBy+2R3rs/7meGjpuw
      uoxZDQyj5C2fd42e58V2jmvyVbJWwEPVSd4zcao/zi8cnTNFu8wV2QZ/vzBDVbt0tN0n0Bh3
      FuvcUFhCG4v/vDBNS0neNz7HZreFRRqBQMfcTwj4f2enqSibLbbil6ZaWImY0xL8Q7WwUvY1
      8KZ0i7ayOBWkcKXhfaNLXJE28WRFjNQmgzHwZMvl67VMxGAvUo4W2vCxTS+zKaWwTYa0nOyJ
      Kq8Wxhger0magUBIeKbl0DXidSfrD8EYhIBtTpsPbzrT+1oTrLL7D5zWe29q1d8F1pCeAKCN
      5HBzggeqm4Z2cAx8fPolJpwu365v5jv1yd5PRcvng5OnyNsdBFANUpzsltidqTAyuGBNJEFY
      mN7rsN9cqGFkEyMMH9p0Bozg6fokD9RHhwaWEQFfWZrg7aPzjNsB94zUmXCbWKSxTQZNiCSM
      VoAR6PgOtxa8HvEbDLuzLcaamR4XGRzd3aNV5kOHUwuTpIXmqUaBvak2trBQ+BBbGYSAa7IB
      Y7bmRMfmO50UG4aB7ekWI44HSJTookwHW1wc61310sbwYiPk4Xoef/DFvo5pHwAhOJhpctfY
      wsD+nWxMqyOR/2OCiLnF8mMUCSdIrElSaK7JzyOM4snmFPWETuI5LIdpap7bu0be8vng5PEh
      Qh93u4y73dUeA3vZmO3IdDUwOGE4WJxnd64cf5RYpChaiu2ZOq5USGGoBQ6b3DTSuEiiP4Pu
      zcmBbJvHGgVKto6tBCGaAFcqbio0+Fp1lEHKsDEoQ6QXCEFd29SVRdNUKIk0Fi56gKgy0rA3
      HbLFUbzs2ZSVtSFCs4Xm/RPnsaTGCI0xIcr42Lz6BdD0A+6r5F61ZeNHD4aD+Xqk0BoBwgA6
      /nfwKDMg8gjAir9f78p6BRdAwIHiEosqxbPNiaGfPju3G8/YYOBAbonbR86TsVbnMBuB3Rvr
      ACwBJbsvuwmjMVhkrWgHfs9oJf5FYlBoAiTO0IO8Je+z2S6zyQ0Il/kZclLF0l8foZD8yfmZ
      3gQApKShGlqMuDK+20pZPUXAz0+0+Hotw5Guc8FFYIgWmY2NMWH8DGuz8Y3CGEPNV4SXUZ/4
      UcGeVJOJVCOeJYElRpDSBQy+XsLQWXFOQgv9Xb6PUAsMFo4M42NCwB7yKcQ/DEFiM+14se/E
      MJNqvSrij665ARgRooUHwmDhXvgEwBYOezIKPUj8RvJKp8T9lfFh+Q7occueX8Bwz0iZGddn
      PQgpKciQe0odfmWiyegFJkQZyVcrm4jYroPEYS1F7mKgVMij9Tce8Tto7hlb6n+Wk8y98A2C
      L//PLH3tdwkbAjnAPQUWyUtcQdAxDIIHl7ZxtLe7r37cShO14I6R81yZqXBNpsyOTCO+no7/
      +g7T5LNGxZ/NkDm2d481RoggMlsqvB6ri2zyw2tGYMVEtBISh+81XQpWwJaUz6zv8oVyYSXx
      rzKA63NN9mU68adIdYn0DJt6KDjp21yTDRCIeBEYyl5IPRDrL2sBu9OtSKQyg+z64hAEPsYY
      HMeh0g14pSN5Kcxf/KWMWVVBHrUDAi1o6h/iojLw7rEyGRnGpGNRnz/B1Hf/lKwOyQGnH/o9
      pt//b+jqkwMyf+y4RMWcQAxxAkdqrivOc9/CHo53R9iXrrEp00QYyFohQsDpbo5n2uNMOx5d
      LWgoG0PIRKrDu1OteHgRgQ+zCpvlinefw4vekZECLtZYAIjeTm/h9p068f8GJ0jixAPpxoqP
      1ROHBJIXmzlOK5udqQ71wN4A8Ufr7e7Rau+zMh0SUUWS57FGihe7DpaAfU4b244W4DN+FiUv
      zNQ85SKNwpYSjLgkBVjEroiqp/h3szmwLix+DcEYNrs+12VbPFAv0dEWYJixfXanfbZkq6Rk
      yOcXttH6IS2CzY7H7kyjx8WFEOTDLq6ONg4BTPhNlj944vyKqCV5H3KIKCdSLX566hh/v7CX
      lzolKIM0mu3ZJhaG016eSbfL+ydOkJWaOT9NwfZWGeVyPWSlyLXasYnYdUFqiQg64gaC5TZs
      ERO7IHF4HPMETzUtDIaWEjSM4Op0i2Zokbc3Jq8ZAS+0B4nSwiLVU1QrStI2kvvKWSoqsgB5
      Gl7pbIxQXu5kMUZhTBSftPK51hmb0fi+RxgGgOCRhgv2RRI/MOUEfGxinqvyZaadLrbQfHCq
      w8dnJHdMpNiWdhm3fT40cY6sfHVy7qXipkIdKXwMIUYEaALaxWnK6ZGeDejc1AG08XmospkH
      ylt4tj7JgpdeRvwwPEHR3jvldJiJd3MEaCk50S1yrFuiYPm8f+IoaauDFj6bUm1SciOi6sY8
      +8nY1uQAG7tIn3AkLgLJDsfmm22Hlm7wufIYW1Jd3l6q8hfnN7Oo1lhvBkoyxJaRI0GY1Uxs
      fVPZ7QWPV5Yionvec3iL4/Gn8wXaG3Sl17TN080sBwvlyFahU1jWxnSb4y3Fp8ojGzp2PcwH
      Lv/m7FamLI/bRxd4i13ihbMP8u9f/AIaw7373sc799zKhNvircV5vlqZfm19CcZgyy5myM6v
      yOQkzXv/kOb5Q9Qtl6273swDZc3TjYke2eStcX59y4trXjqRJDo6xcvt4qrkdk1+gbSViKiG
      flhFshlINkrsK+9u9WhpjQVg0ASIAc3c9L6TvT9DSEhfHkNopBTcPdoCNONOiDKQtzS/PFnj
      O40cz3VWenDHLMUvT5Vx5OqOFSMCMC6JWW2zoxgTirK2eLyR5ljXoaM3ThxtbfHN6hhX5Zdw
      hMGIC++wSileaBi+Xs9t+D7rIrYmHizW2JltIxjhXx+5D2WisZyonEDKO1G61fcuvobYn20w
      7Xbj9xzZ8gFCamTyLmLvNZQwdDlBxd89/E5XpUs98HOkoFoIClZAQ7ukhGJHqsmxbgFFZCw5
      kF/oPbYhxAzZDi/NcJEsvmQMUuKAWW6HNWgRoOiiCUmi/SJrkI+ii8LHxMRjhOoTrogWQtcI
      Xmj3d9Uxp8t7x9r8wngTuUy7d4CUSKGNQ1dbeCqFVvlIFloFroRf3dTk4+NNBIb50EJdpAxi
      pCA0kSCvV7jrV5k4Adtdn8ZFiEsXghZwNkij4ulQenghSpOiFTo8Ud94oNflgIXh7rEFUpYf
      z80wsRl8NC0UkeI6SPASzTtGz65y1eXc2eBYPpvcNgBZK+DOsZP80vSLXJ1dYnemsYoV6TKY
      q9FogpiTxJ6lNUlHmIjgRSSH9b+PTaP4sR8gitzECJpBlnNelkdqJcLBcFgRUtUttqZbXJke
      VmbmlMU/1dJ8amGMP5rdwh/OTvKn50uUw/4CCukMKVEpCTvTir2pCxPvWvh+sxSNTV94YoPA
      ZyHYmJi0YQjBkXaBeT+NFD63b39rb4cay4yz0Grz9fJmquoy33c9GLglXwbRjjc2tSqBJFGg
      ykhascHEQXPv2Cl2Zxsrjl+pE0S4vjDHzfkFKmGavzhzAFuG3DV+gmsKiyscbT8I2IP208j8
      aUWEtoEN1QiFiolSGpdq6PKZxVEaSoKA7Y7PFakO2kBLWXx2aZKrMi3uHltkupnjW4043ELA
      99oD4QxC0ETwdLPI3SPVSAQSmtBEcUdywBcxal36rlANXYSR2HJlDsPQcxqNMYaKvvyEuCXV
      YTFIIUSbjxz4Gd6x+50AnA0n+HTFpWVeWwvQm7INbioucaEwhyQU4oxXZNZPI4ThPWPn2ZWt
      I3CwRA5NgDLN2Iwth+zwib9gOt1mOtWibSTSCGyR2PJfG8XfNj0Cdnoyf0j7oi+kCflyudQj
      foAzvsOZYJwPyEW+1yywFDg8EpY40s7SCAdCFwbnemDhPd1O8UJnil+ZXKTgeIDgvqUiu9OK
      qzMBrgTrVWwSx7t5jGkjLuC91VqjdciJ4PKHOJz2cpz2cggMe5w2Y9LirM5wLkhhLlKsezWY
      sH0O5msczFVAqHUMiZE4rLXN2e4o9y/NgBBcl19kV3YRSxZYagqeO/80E7lJrpneS8DZ3tnL
      IRAYofmpsRORKP4a7PqDsKFvwYnko4sXKYSRLPouLTMcp58ExP1TbZSGsuPfBAtqjVDmFZ5w
      gSbyKkO0AG7JB9xfzXCk4/BTxS6jGzStroamsbl/aYQPjoek1ghTDgIfz2tzPMjwsveD240N
      gpeDHHCZlOyLgIPm9tI8uzNNDAGDSS0rYcDYPFDezuF2CYRg2mlzZbYCwqLlpfjjx3+fmhf5
      cT5w9c/y9t3XEppKzAF0fBXdv16CdSJLf1CIdYDYcye8WO7b+AWEsXm2Mc6nF7atmePZUBHh
      bHE8tkhv5UYgDJYww6HisaLsGcFnlwp8uTzJbGCzOdXmFyda1LXkPy7mka+SJo92MzSUGUpk
      GUQY+ihh8Wg7T7CGUv56xpTT5X1jZ9mTacXWvfUn1BjJNyszHG6P9CxTt5Tm2JTqIHE4UztH
      3av1jn9+7jksES3qYaU2ca72Qyd+GJARQ/PQrB9zsyoMLPpZHmqMROG/FzDV5S1FR/RFJBEn
      vE/aIb8+tcBdI2U22x3eUVriPSNlZtxIWZ4LbZ7vpPns4iSP1V0aCj482iYlDfdXX2UUpxAc
      bsvIKbYKHCdFKB0W1Y9unI+4lLROAzNulw9PnmFX1kfqSaw6yIaDTRQrtRpOtQscbo4to9kk
      8C1kS2GarNvnYvsm3hR78tcYO/KiHJGXG3a04wexVfbiVqJvJA/WRwmWm1HXwEvdYWKdsjRz
      StLVAkcGXJ/vcm2+giHEJsuebJfPL070kvM9I3m4OcLDDcO4rS/K9r8eHmrkmXRqXJWViFVC
      KYx+beXS1wrX5iqkpUKaScqP/QHjJx5ACMnSmz7AxM2/QGDOrzjHrGI3FCYJew4pZhT/7JZP
      8t1z32UyO8Vt268jNPNxZICFLQyu7Is/qwWovZaQQOwISuL2Nz6op2qjnOyub0FZD3PKAiFo
      aYuqSuIz+h7mjNR8YKy68kQhWFIWIeLSnIErL0hFGULTxhiDUgFhGHFEpUL0q5WzfsC42Iw4
      AITBlpF1S3aajJ14gLTRZHXIyIv3rZ8fsSKQ1+q9h9DU2FySfODqd/DmnfvQYg7Q+Fpw3/xe
      /vLsQc50C/2xDwSq/TDQ2+6MCDHCx4iNi0LHuoVXN+743HE7YMptoUWAEeGQvTgnJe8qttnh
      dldn9Zdp3h6tl1gIQs536rzSrBHSwBiDEIJD7dfQDv8aIS00e9ItjDFoIVEDizyQ/UocG4FJ
      MgF7nz0Cs4QydXoxm8bQ1g4+Fl9a3MPpTrII4koSPySsIbtcWBuv+A7ly+SgGeI4ZlgRc4TN
      tfk6H51cYNVYqMs0d56R/O3SJP9paZLP1WZ4uZsiUG2EkCyEr79EdoBexNo6B0gpIZOieuDn
      qVkpyk4W7+Z/TsAqnBeYSbW4KR/7CeJrLwZphHH69zMCjMWSl+GZxjgnOjlSMuSa3AIYg28s
      XmyODYxivQjOHyxW5e19c5VYUy84G2Q3FNq8ESwGKY51s+zJtEjikPplUJIaQasvyiszTY53
      swSXUFNmORoDiu4Xlyb4xNQcOWm9Lqu3Aetu4oGRPFMf5bpSBUWFies+hHXDLwGQ1mVCs7Tq
      ea7UvGXkLC0teaEVOTIfrU9iCcOVmSrzfprzQYHFIEc5dKnEVvUdbo27x89wrDPKuN3h2tLC
      ZX3US8Xqb1b0QxvAek20dKWT5Ocor1TF+oASK5ObezCGd4+f41uVzTzXLqx93CVAC8F/mN9E
      wVL4WvwwLXU/ECgEpud11fh6tmd6vjAEk3bACwNz8lBtku/Wxyk4Fm8v1Bj3nyOdKTJv7aMV
      LHJFrkrODvjpyaPk7UuwOP6AYCcyWpScHMX1i76dEmPCAREl9hqT6tvqX22UooH92RZ7V4kf
      WTFYYYaC3vZnW9i47Et3OdTKX5oyuB6EoKHt1x/x99Oe1sW36xNsz7QZc7rxu4aXWyWQsDdT
      i/m/Hcv4SbiM4FR3hEfrE8uuJtBCcmexxl8/8XvMt+awpc2H9v88b99+BZoGBr1GTkiSk6Hj
      ob92DjEZEX8kg61q/RHEAVF9B5lBsT3V4u7RBdIbCCVeH4YZp43cwHXeN3WOVHycKxT7shUE
      kl2ZLlNOcIGzfwxwQZl/GFkrJC/DXtzNM80J/rGyg39c2hFvhzZJSmNy/ROdEv+wOLOyjKEx
      lCxYqn2f+dYcAKEO+fbph3Fkfk0RNrmw6MXpX6wou3qQXfLbhSD7Jw8nCqxzPwwhBafLgfwS
      bx+Zv6jhroan2wVOdS/s0NqebvELU6e4KV/mF6ZOsCPT6v325mL9VY/j9QqpI4V0T6rBL246
      wbZ0a0Ncq64cTntZQPNMY5xHqpt7vx1rFoFEH4xWVWAkj1WnhqJ8E4w7PspAxikgB8rClFIj
      cBGBbf28YtjIQ/QXTpKxmCTkW3EW4/r6mx2tPmvg5hsaZRThZywKMoijiC5RThCChTDN040x
      tqXaa0pUEX8KKDgebxlpECXH9HWTXekON+TqfK+5eobRGxnjjsdCmOKGYoWsFXIm2UwuMA8h
      kvvLWxDlzfH7659QUWkMtaHrtJXFYpACaXCFwR9wgC4FKRDQKu7n3is/wJNnHmM0M85HDvws
      vr44hXdQ51zXQmQESfhZlORCj2OJ3kIQDCfSDMOmd9LFwxCwNdMmZ4U0LqI89Wo43s3ia4eU
      NSzK9OtLDgRomcSFLlB4WDhIodmXqUYL4McMC2GabakWk46HLQ0fmDhDK0zxtdrUBc81CPKW
      4I4RKNnQUoYHK/B8c4yDhSUy1mBwpIURUcD8tOtzKi6Fvy/d5KpclW9WN/FUDX51zy2864o7
      MSh8Pb9uaLOIC+gOfze4cqNiAWbAX5CISgI7WgSEaBHTCGbFri965XxXFvG1Te+kS/MmGuPz
      0amjscwo+G59kudaYxcfyisEL7VyXFPs2597deeXh8gK4tgdDUKiTBJh+Dq1179aiIiEUnFu
      xM5Mm6frG/PQWwI+OFLDeer/YnTxCJWxPXzolt/ib8qjHGqOcXNxvseV42BelBE94scY9ueq
      7My0UGaeMaeNMR26A/4ts06I84UsjMPlFftWq/4yiUUgo+PDTH+wEUvoXWNoFEYicZCD+ZGX
      BBGVGS/aAQXb587Rs3xw4gRj9jrmy94gIDsQAttaUaVNrx0iK3QvhGMZ9/6xxEx6IIfDwKHW
      xjjhgRxkj32ezSceINOcZfOpR0i/9GkO5uF4u4SKxZyK73KsFWXQDc61KwyFuMLbFdkmY0mN
      TiMQuCwvhzKM9SWPfmErFR8rousaiTEaHVesiErvOwgj4jKdqb5D1Uj6hp4+LFLRAugvlcvk
      iROwLdPgQ5PHuTG/uK5tWcbSWfS0hr2ZKoagtyA3khU0uHgnXI+PTZ3s16//cYGBWS9HWyW7
      qWBkg1YxKSDjN4fUzozfZMb1eXupgStsnqht5tNzV/BQfWUfBd8IagMOxEgZdUmSq4YNK8uC
      6NbYtfqV3eINDokwAstksOj/SZPCMilsMnFCl4swDsIktams2Iy7bBM1kbkfYjNoUuXhUtEP
      oVNxwrEhZ4fcPnKOj206Rkl6vdDnQdrUQtA0EgzcMTLLqNOJFexg2Pa8Hgaysl1p2JzqcmNc
      2PfHAiZi7nkng6+nCNUElizx3vFZNttrhyEnOOtBa9sdNNwCCmi6eVrb3squVI2nGgUerMxw
      tF3CZ43iw0mFsMGvlllyhOlbaRL5PPp3bbY9qPwOxholdCqMwDa5aLdP7mQEFimsxE+1Bgar
      nYjTc98zxqrQt/euHf6w9mANy7X1wZuEWnCmk0chONQY42TQZ88zbocbC2WmU9X1C52u5dwx
      KwvcBUbwfHOEY908Z7qXUK7wdYJJx+O24iJpkaNcPcx93/9bQh1yz957eduum3iiavFIY7nD
      aiUO5uEWcZzR9jmq2WmeYi8Nv8Oxbnqlc9FA3g5oKoecVEw4Hm8uLrA51R04JLLYCVwskUbj
      o+nE77DvZF0BAyKu1Rr1HkiOiQwewgwUYDbETVeSGqBRlfNkQSR9ygwGJTr0FOB4kSQ0Y/fv
      PcgmVqnUuw6iYxNP3mDdlogl29KwMxd5ervK4WStvwDuHj3PqNNZvzaPEb2J6ZXf7uk6kUVA
      E0bOOsAWcF1xnmsL8zxRneaJ5oWtIa8rGBh1DO+esNjqjKGR/OVjn6PWjQwIXzv6JW6cuZmr
      czXO+VmOexnW2wWea8Jxaze/PJUFLTmyoGirNAKYtH0WwqgS9Izb4dbiEuOOz98tbGXa7XLP
      6PllkaBRKIsULlqP8+z5I5TSJXaNbSY05b46a/whqx6xVccykfik8WJpIgmRXxmhauLuMiYm
      /L6yG9FBlKcQt8QQUel+i3TMkSIxyR60n/adHn3iBfCU5KnGFNfklyjaq8uWySK4kFY/lW5D
      P2OO5xt57hi/UBhExJX0wCLtOz7WOUvAqNvBQl9SA7YfVbgSPjjaJPeN/wlr7lk6wmZzcTNV
      OxYHhEAIScF2+PBEjf/nfJqG6hNPSkIxnrpKCKEBX2uOtuCaQp2fmwiY9wX7ck3O+xkeq45x
      c2mJmXQDhEIYm1/bUkWQAsYJdBViZTUiRhelxvjjx/+IU7UTALz/TR/irr23oXSVlfKJQBoH
      SQoZv1OJizFJD4JI8R2ifxH3JwMwonde9JMdX8OO61e1ete0TDq6X8IBBA6WGfTCRimSUVx+
      pMAcbZd4qj5JOUjx/smTl/LOBq4+/PAXrHlj+g80XF0sHOA2w0p837Qr2ZcrU3JafGNxF4tq
      uJ/U6xWjDozPfRt37lkEUDAhH/bq/LvClQQq4N373k/Jb2PNHsUIwYenxvn8UpRKOunAXcUq
      05VnCYXF3PiNLAUttqaajDseRsCI22Qkfi3TqTYf2hRZmDQR8btiCufZ+xDnn4bCDPLGT+A5
      rVjsiUIT5pqLnK2f7o35yTPf5p4r3kHAPLFtMoKJCoBFO/KgA6zXjaBHtBgTVyu/8BxJ7NiC
      lEgMkRK9vJK5LUwkW/V32QAhxJBINO1GvZdOdAvUAoeSs9JZtZoSvdK0qslaPtvcJrNellBI
      XuleOIrTxDXehyCi6612z+X6yJTb4d6JM/z13BUXvNfrBfYyT8vm7CS/fee/ohlqpsIq1pf/
      BbI1hwG27HwHd978v/EPC4J3lpqkH/yXZOcPYxDUtt/BTe/4bQKtseUYIDBGoUyN4U0lsr1b
      Io9z8nvIZ/4y+uH8M9jSRt32qwR6Md6YFMV0npybo+5FISozxa2RXJ7kABsw+NGuHPeYW47I
      jNmPVIC4GrmJRG2L9X0dEguDjTAyXmD9zTahJzuyhQ7XbRRYMfuJvptIddmfK/N8e5zDzTFu
      H50bulFP5urZ8ZNBa5aboLKWz95slTN+lDhthKAdWmTXKm8igN4CGC4gtPqkReeFiGgAACAA
      SURBVKJY8iKiUTlR1Yk3CLpaU508SLq0g1ztJL6w6O57H480Mtimxjv9WWQckCYAef5pRq1I
      Ot6qlmD++73mRZOnH8USWawwQD71Z4iwix7ZhbrmI/hmlr4nXsdyuITWstCG1hz9QLaoMngp
      LfjEDf8lD77yLUrpEd697x4CvUDiwY8Q2el7HqsBJA24l2OtXhRrQSAj/cAMcxeNjxE6ki0i
      CTk6wCKFMRohnEhRiW97e2mOpnI40hnpLYBhW72JawoZksq9qz+AzcFCmYUgw/OtqOalXIM4
      +0Sf9J1djmFlXcd2Y9ELgupf9/GBroKvd2ijeUXlmLnnj8kGZYyQHJK7OVsL+LlNFcySGCIp
      LQRaRLqDLyShtEnpiIs3nAxpJOLbf4h85RtArP0VppE796NMm57IYgTGBJjpgyBt0CEgMJtv
      RBuPfli9JNBVdoxl+bWJj2NMGNcFCuNFFEEaZ91d/JKiE5ZBYiNMNhLrCdGJfyG+dFwYy1p2
      UpTepkR0sMAma2nuHD3Hp2f38nKzyN58PR5kFKsheuWqE9ktcjYsd2YlHOItI6cZc7pMOF1S
      VrRTr8SFnWGalUp54h081hnnyeokvhHsSjcvMFWvHzRCm69U8gghEESphRrA2Pz1+Rl+bnqa
      8QM/jzz1cCQo3f4bHGlq7h63+KvDn0XlJrm3UyaQNiN3/HakNA/U8gEQ3ToJ9zRM0vZD0raN
      kE38sXHc9/57xPxhyE8TbN2P0oskYQkJHWjTxtft/gZvwCKDwMYY9aoJfLAN63Bf4kQSiTZD
      GY9Ji5W0smqsaFIfVBirF8chsBixDVmp2BK73QdLp/c/D2rjCScYFLHieH4J1xbOx99B0lV8
      eFKSaA97VQ6QiDjD94s+v9Qe5Z/KM9gi6gn8aG16tUd9fSIOylkuFOYtxYcnzjPrpTi6779h
      fP8nATja1rzUNlxfgsNzz2HcLC+4keHjwPnvcU9hM1fktwzNvC5E86XMCH/13b/kpaUjbMpN
      8ys3/Brj2S7dkSxi9M2ARuvFeFh9B5hY1jUUA7YcIajWcFtLqJFtOJkMxmwgZGYZoorlsRGk
      N+hg6IgEg9mFq2Ht/gBxdYjBzowCwZ1j82SXOazW9yJvbJX3dQc7/mx6qzky1fZ3F20UD5R3
      cMIrJif37xYHjbaMjUKyP1tGEynwb3RkhebR2jgve+moZEwPEgsNKIrpEWrdSu+X5+ee5Uzt
      FL95+79kND+FDDro0V2omYMYqjw/9wKH5w8BcKZ+iodOPMhHDtxLqCsDIvIyxA6vQaVTyjSd
      00fIPPyvcIIWQWYM791/gJvLcjH5ApqoKvllkI4AomjQlVYcgTRufMO+HiCx2JHuoC9Coby4
      FqTLrQ59yIGFcagxxfPtvodTKMOBfJnFMMNsMNix0LAnXWfM8bi9NMsT1Wk8s7F+wq9HzCuX
      +QGz8p5Uh5aWeEbwoYnTFITLf3HTP+P+F+/jlcpxfBVV3mt4dSp+k9w17wETh7SYeaRIYS+r
      iWRLm6TG/nIkirDsdd/sQ5IndfzrZILIJl/olGmeegxx9b2YdSrHQSJDBLFpM7is78+OWIQf
      xU/Esnw/FzRpejfodBJo47NeIdNmaPON8lauyFXZka6QtZKAtfUXzuqcRGPiMZ33MjxVn+J0
      N8+bsksIY8g7AU/WN3O4PTpQcSzCtN1leybSVa4vLLEz1aCtHT43v5vXuuPKDwO7Mm2uyZVp
      a0HWUmhCtpYyfPLNn+Qfj3yFL7/0DwBsKW5lKj+K0hWGw1nSXOUWeacxVPwm9c038vZdd6J0
      E1tG3FeZDoZoIRmjiYSK1Sw1Bj9VIktPHcBPFXEuQBODUHQv++YVRybpXv1GSYrhxtfDTeQS
      F7I2Xtw/KrL6JLK7pyy+ubSNE36BE90iV2TzvHv8NEKspdCKAQVmcJEsd3pJjrRH8JXkl7cc
      JmMFBFryQnMcDGgh6S4r0TiTaQxN2KjrUzQ+U26X+eCN4RRbjptzddJWVFxs2u2A0GStaAe2
      4j4Ioa5zzxU/xc7R3dS9OtdN30jaMShdQJkG0TuwkY022a/9Bh/xahigG3pY2RG6gceDrzxK
      N+xyzaaDbC2No0yDJIhRiW7P9p5A6xbutR9nsTVHvvoK9c03MrL7Toy5cDGEXlujH8CeNSjg
      RwPtrWYVs7NhC1EUlJSIEYmCG4VOtMI0X5jfSVmle9c82h4jMDa3FM+yKbW870CS0NzXlFY3
      d0a/XVdYoDDa7R3/XGOKQ83JtQxItAKXU51ST7+Ycj2yUrM71WLeT78hucCJbpqD+Srb0l3G
      7RBjJFIWSc0eRxy5DwBz5c/Q3bybfZNTuJ0Zgkf/TxwVEkwfxLn6vfh6FoHBqZ9DxtYhAaQX
      v48WOf7Ts3/Bs7PfA+DhE9/if7zjtxjNxKQkQAoHpUOE0Vg9bqCxXIuRu34XISRjJkSpjeVx
      m56J/fJjzYzhSDSKPKpRkoE98FuSnhhXBTaaF1slHq1to60tJu0uC0E6CS7lRLfI/tzK5Pl+
      sz3DeoqQUgohBIVl4b03ls5zyivR8FYJpxDwQneEF7ojyaDZkW7RCSx+anyObzde275brxUW
      lMs3alNs7XT52MQCQlg4gY341u8gwnj+zn0X92c/jXLTBA/9Dunz30MAmTOP4Y3sRGzehCEk
      FNFbT/hqgMAymtPVfjhMJ2hTblcYyxSxRInFts/Jykl2j+1iNCMxerDUpSIMy5HMsDzINI6U
      P9zKsTXlMeosI/j19E4DVeVwvJMnJ0L25Rob3tvWTpmPd/hocIoVzMKI+CaCBT9LXaXISJ87
      SvNsSTc42SlxxitRDlxsDLOdImNOgDSaouvHbmrd+1uJpBulQFirm0EBtrpNznTzjDk+LWXj
      acnWdIsz3rJGEwJOejkw8Jm57SvfwBsMZ7w0X1oa430T5ciGFvY3DxF2EMYghCTt1XoMVBhN
      ym/RVBqkor3pKg6VdrCnOcuk8pGNWbqf+QBb0yOU4yrarpWikMqDEJyolPmTJ/4tnvLI2Bn+
      29t/g+m806PdM57Lg7URKoHNhycW2JwKaIQWZ70UL3UzvNTJ8DNjlZXEfwE81xzhO83xXmW/
      hpnnpkJl9YOXhdXbUdnBpP3pWtGV/T6tEEXVYURPXJpK+UymZrmlNNs740BhgUm3TSOM1J7T
      nSyfOn8lFoYJt8O2VIvbRuYGvMcDo2LYOZdErA4iGesNxQV8Y4G2ebFT5LrCAnsyDc4s7F79
      UQSXv4DWjyIEHPcyLHk2U66NzE0hWhEXNrkptGWhTUBnZAeZyjEEoKWDX9hC2tmKwHC0+gqf
      clJMFKb5rdoZckZjd8p8RAUUDnyUbtjhuukbmSmMoIXPobnH8WLLUifs8PzcIWYKb8WYDoGB
      b9VGOB+Xuv+7pUl+ZnyRZxp5XujmetJCsEYGoTByqGexNnCsnWcxTMXcPH6nBkbXqjxnBI7J
      xwJVG4SJk+KFjjX45Y6o5LwBhwaR6BJl3YhYQY2UVCOSKnIGT7l8fn4fCsmedI09mRqveEVa
      yuGcl+ecn0NiuHlkjn7M98q6RKtaj4wgMDbzfoamcnjr6CxdZXHDyCzlIMOXFrevPgE/ZsjZ
      iqLbIZAKcc//jTzxAAB65534VgOtO6Tv+E26Y1eQ0gFeaQep7/wxsnYK7RYYu+2/I+NksYIO
      1gBhFiyHj1/7S2jVxJiAUFfBsthcmIk3q8iauKUwA3HjkacaxR7xQ1RjdMoJuCbf4oiXRRvB
      HcUaV2VX9qcTsU9BGa8nCj3ZGOOx2sSQHmejuS7XZG9KY+IYo6QHGYBtstjkSEJ4FF1spUKk
      TIKPAiJP7uoLYTksXAw2ynRjs6iJHVEWj1a2opBkZMBtxfNMpDw6xubh6hYARqyAxTCLrxxc
      KUBo+p7l4eC8ZAEILBb9NM/UJzntFdmabvLOsdMs+mmerY9T1ak3dAbYxUKgQHZReHQKFvLg
      XQBx3E4UGuJxHr3vbUi3QOrQ/Vix08vyakwe+SK/esN/xWMnvsXZ3HG2nX8GY6VQ132CQC2h
      dD2yCAofoxU3bNlPJ/g5Xlp8kaunDnBgah/GNGgpyUudYatbVTmc8lLMei4pNB0sakpSVSFF
      O+zl9PafRfb8ALXQ4anG2Aojxg35JneUFkjC4xMTvokjSgd7HggTlby0BQIVKCwn8gMYEcXR
      sEIcWhmxlwws8hkkbCfK+5y2Qw4DN+aXmEhFbHEp6JfS+PDEaYpOyJKf4aifoRI6nPPSvHf8
      BNlVEroFNl9d3M6xbpEwjuy7oVDmRLfAl5d29LvU/IT4+xD036fRKNOEJBDMSBAabbrU/TrH
      GkXeuux0icEtHOSaKw+C7UE4C9LCykoCs4gQFrrHnSXCNLhz5y28Y9cdaO2hTBWB4KSXZT5c
      aaj4wtKABU/AoXaBE16aO0fOxo2ybSyTWiGel+yAzU6Xk35fz7suV+G6QpmhXgVGI42NRRaB
      JKRFEoynRRCHZ1gWUiahp0mnj4vLnopitEMYcH2H8eqccj2EsWiELvszTaRxsQWM2BbnPJsv
      LG6lqyN/w3SqTc4JVsj7Srv8U3kHR9uFoVX/1aUtLIVpXst2oj9KmLC7HMjVMMLgKYuXW4Vo
      3uPp2JVObOwJRxd0tMWRxiQ17bArXSPv+PxjZReWk+eWTdeTdrKIoI2RNmrmVqpel29U02Bc
      7h3LstMtYxsfIYjj8hNEuSRKN+L/jkVj4/J0I7/6A6zy2hrK4R+WdrDPmeetI2fJpUJUoLGk
      gy37DrY3Fxc5udhfAK90C1yTa5AbKOQVidT9PGIlumiaca9pC3ARZ+aeNVg1hLlAiqFhhTl0
      EFEWWVRSXSD5bmOcB+ujHExVuWsyzh8wgkqQAySLgcPD5RKW1Nw5FilnM+kGUoa9sGaIlJ9z
      3iifW9i59th+DCGAT86cIyU1ig7adBDCGkgjHEDsQVI65KnKZr7dGQgMHGDstxYMt/MKWW8R
      bacIx7fTVUv81fmdUZVsA5ucLu8YPc+mVB0dFySTSV+1waR3ACy+uTjDoU7pojmz0Zqtdpl7
      R47GhScklozyEVJuhqYf8ucL+4fOsYzmYK7KnWNRvoI0KVxT6i0AT1TQeHFEarRIB5Liw3UW
      QFI+aO2nkNgoo+JFYuGYSCkZT3u9ydHG5XCzwKFOjsAIrs+Xuak0R0r2fQCDvWT7sSWyp1r9
      BJCW8NPjIRz/Do7fwJu8mvTkVgwCx6TAGLQQBFTQtHtzGoYBSi3ztwxM6XPlkEPuDiy5m91W
      gzv1LLYw3Fgo81h9Ah/BXJjm7xa3c222yk35s1iDpRMFaB0ihYXAxRgRJdSv8tokBitWTiPx
      dfggISXn9Dhl0WCTvRRfPk6L1ArbBLw5v8Djjb4YpYTkcKuEjeHWkSXSYvi6Mk62TzIMhxbA
      6rBx9Sh2LTJvquI4SnoQW236eZtRKHOU2hattmsLTXZm2xTsVo+7VMI05zyXXek2NxWWGHOb
      q8QUGaIkZ5tymOJsJ8esX8QVBu8N2Kf3UnB9ESYO/SGlFz4fObCEhffePyHXKcO3fgdLB6iR
      nfDuP8B3FIIQT0uO+ZO8rEbXvG5HSjAWKHi2ncewmQP5CtflytyU7/B3i1Mc9zL4RvJkawxf
      w92THSyRAQyBKoPo0gteEPDu8Vm+Ut7CnJ+KzM/GsDPd4JbiApvTbTCCJ+ubeGyVhKWirQiF
      i+tmMEqglcZybNqtJlop9tnnecUpcD7sJ9X4wuLJ9jjnwywfHKvgyH6BB2EshIh8StFGDXaS
      tmjMSt+QyzjOw/8HnHoEAHvmVrjzf0WJSLZMSlIkGWCDXmMpYMRWQKq3KCYcn5+bPhO3PFol
      zzcaJhKXI81NPNEYofIqi+6+ETFmw8jSkd7e5hqFXX4ZcewryDjTS1ZPwKlHkXtvoK00n57f
      TiWu4LwaClbIDYUmD9aj7u8IwXOdAoc6ed5WWuKGfJm7RxZ4vD7GoXYOhOCqQp7qoS9SOv04
      rfQI6ds+yWmKtJTEELIn3eSrS9MYAR+ZPE1XgyMDtmXaOGISW24GA7eXauxIn0Ri82IjSyAs
      tFHcMVYlLTwwFkKAtARhGJLOZNBKY4cB7y2d4Iu1XSyGqaHnmfdT1JUkJduxzO/QT5zpRyHE
      xXEFge+B5WDbfaYglYZTj/SV6rNPIMMuvuOTBLBFPw6UK+n1jO2nMw4iqh4Xi0W9C0dWnkhZ
      A4zgK5XJ4WN+gh58DY3MGCWi6dEImplRlmc8CEDpgC/PjVNRaxM/gIPhqkyLRys5Qru/6RgE
      D9XG0Wj2Z+uEWiAMTKWgVP4uY0//B2yjyQILQOfW3+erlWin/5XpV9iTjcytm1ItLBERoGOm
      Mc98HuuFz6Oljbj5v2Zm900oXWdqPDo+Ml0mxbAEWmuU7mLbNkHgI6VFOpMlDWzpBP0FYOCn
      xxbZne7iyGiD1caL8sJJY2iiCQnR2CaNneTvWLa1ir91dUQOr9Xd1YlTDDRKeEhjIwYCokzc
      aSbJ5loecdpRkoeqUz8h/HXwnTrsuul/oGa5FLwG1U0HKW67Be03YeH7SB2i89OomZs55wlO
      qZHeuZO2WrXrZTl0KIcOoVz5m0HwcG2KrAhZUhITt1XJezWkScRgyHXKOLGVLic1aaG5sZgk
      58vIImNs7FYTceg/I03UasM8/geIvV8B7feK3gqR1Arq044UIWEQcbikhe3JTpbn2gNhLwIe
      q4+yL70IsWk+qTMq4xJARkSOOosMdmLytCx7RZURZVnI634Vnvv/ogvt/yihO8xqhvuHWUN5
      lwaFEgHQoefrFknh236D5L73ULAQpPl+p7TiJfwEfdRC+FRtgl9/y39PKDVZ4+Op01i7bsXZ
      9CkMGu1kCO0OU7qNIwxe/JrWbPkq4O8rEyDXNoFXQxc/1qGbCipj+8m7BYp+A42guvVWzvsR
      1/cQPFjbxHvGzy0TdQXCKKTpb6C28nv1OzACraKc+yREXiAQUqBDhWXbhEGA7dgYrXmilvDB
      PhZDyeF2gf35JRQdhJBgJDa5nkMtqR7d6wAnhFhh/temRnjwo8jrfhkwhKZDqPtRnREhD5a4
      04BDv3K7NRC/MVjxd/nkR6XyjnfGmPXemHH6lxtNJXiqHnBLsV8IWJlF+rW/IgVz1isSmo35
      dZbnU7hCMyJDLBNZbJphhqqJbtBQ8JC/jbfd++fYi8/STpdIT9/A8bkQcAh13zQqBnw3RgSE
      uQnMlltInfsORki8fe/FMp2eLupYGYxRkdiDj5X4qUR0LTcVbcKhCtGht/JBhKBrNJqo+Z82
      IZomCg8p4g1AaHwq2EZrjNBxhYGV6ZFKlwl0koC8utLai9URJk6pW53Ql4c1JLt/cpmFboon
      m+M/EX8uAue7aaQwTKWGCcFoONnN8aXK1FBnzbWwJwPXF0AZeLIOZ7zIVHljocH+bJO/npvi
      cHc4wvblDiwE27hybIzbR2b5/JxgMUza3cJLnTz3xgUWBqFkE/vO/wVdO4cREjGyiW44G9f3
      T8Vmbxspo6ofIV2UCrEse2gx2bbD3aVz/GOzyJIalkxC0eltviJ2DgZhByEEltXXU8WZuWeM
      kVHSgzEaKezYeyZWC9IcnuQVHCApYsvw9zC0KNbqBtgMcvzF+T2r3+wnWAE7DkSQwD/fcoIA
      xeF6CV84qFDxvc5YVBPVRMFnid0dA9IYHAy7c03GU2lk8/t8+aUv4Fou77/qYzwZ7OOMFymz
      GanxtESvEUVrGc2BfIVnG2PLTImGtNDsciu8dWSRWldz3mzhhiJoLXClYbZZ55gqcFspkiyE
      sXqBlhCVMtEEaKMw2iAtCyEEWiuktFBKobB4vJzjSHsMR1rsLnTYl20w44ZRZZNe2X6NMj5C
      9qPOep5gYwxaa2yZYb1AuH63jqgGS6RQiNiSE7mdTVKTUQyfN+g3WM3p9lhlJuIAP8FF44pU
      k5aWnAuWdds0husLFW7MV8jb/qobj6/G+f0H/3eqcbWITfnN/OJtv8dn5i9fy6lR2WHMMhxM
      n+Mzz/wZda/GbdveyjW7P0ZbW1ybq6J0HYyO6/73izIo0UXRQZkg2qBXWYhaKcIwwBhDOpVH
      6MjqI4VEiS4hUcBmlFTfV3Z7Nk8hRCxrBQzK8csRLYDYESaSokR2b1fv9/VafuZA1NMasUbV
      8Cc2/0uFJQ170k0mQp926HC8nWVLxuPWQpmt6QYIP1ZG3YENK3IKhUrRCfphyA2vTkZeYinJ
      xPq97BVXdIbbRuHrz3+h10f4kZPf4ia3wP5TDwOgr/8EprQDMWCNsWQByxolari3SGhqrNb6
      1JIppMygFQg/jWtn4hq3BhnrMFE49TBhDuY5IpZl8/fDEvrh0QIbI4I+oRPnsvWqTa7S1C7G
      Crk/Rju0ebQ+zdGLrN2TkVFYQFvRs3L8OEIYw235JqNuAy2CAZl7cK6TJhORNU7iYJs8KgwY
      cXO8efvbePTUg0gheefeeznUehW7/zoqx6BFyFYBo0/+MSJefLJxDv2+P+39rqXDt04+wP0v
      fgHHcvnZAx/n4JZtKN1YVYJIyxGQYohDRAb2VGyOlyis2IEbdSAaWkpRZljSHTz+ToS96tG9
      SxqbJKw2kq9C7F6rmtXLpaxVPKsauHx+bjdNc4Ey6cuwLwvXpRfxuudxM9t4vFnizCoGgTc8
      DNyUbzDhBujYIBE1jBuuhhwdGsYlwm2ShhKW7YJWfPiqD3HbttvRwuaM2coj1Uu0RKxz2rNN
      uPuKD7DUXqDu1bl18gDjR77YP7W9ECXQxARc8Zvc/+J9eMrDUx5/+/zfcP2Wf01IrefVTRaC
      MQpft0hZq2+iopfnYmGbXCRa0R1M9I0mL8r/Hd6lB0sQ9qsvK/qpimbgmI1vxZXA5QsLF0/8
      4w7st17mL779RzS8OhPZSX7p5t/k74NJOhdTh+t1jl0Zw9uKPmO2BJlGmyZGRYlKluzPabQY
      kpCU1atqWzpge3Yi2r66HWacFGcDC510ol4LBmxhkCJqmLceznnwtLiCT9z2u6RFgGtlwG9j
      jn4pOmD3O8FyIQ7nUEYT6L5fyQu7kf6oHYwIUPjRYhdWpBtYmlB72DK12u2jQrwGtAmxRAoZ
      +QEGngQiR5UJGUqIERqD3+MEg2mKgihXc+1yJqvjTDfPV8tbaV6oQcYq2JOBZ8882msJNN+a
      45WFp9hWeA8vrcyoe0NiT8awXxzmzx77j7T8Fu/c+x7u3H0rUtaGQtaFsXvhvxdG5MPfmQ7Z
      mQ452bGoG8mZrsUrvk1VW8sP5+a8x605j6xl+JPZAo0L5JKc7ApOdrNcmYWrrZf5Zn4T43vf
      xf5N1zK5665eLBPAWKrI7dvfyuOnHkZKi3v23oumjpCgQoHBQssQHQa4tgDhIOXa8Z0R58vH
      kovBmGCNaNBejvDaE9U3368MZb0QaoHLFxd2El5k4k2CloLRzNjQd6X0GLMbLzH5uscNBfjs
      k59hIU50/+rRL3Fw+lo2pYataMP1+C8OOzIKUFyTDTjlWfzNUo6hkHQDby90cePX+CtTTU75
      Nk80UswF8WIZeMXSGCwDji24Nr3Anz/+b2nEDTTur5/iHqN51+67EfEisHXIR/d/lLfvugsp
      JJOZIlpVIzFmgHJD46FFgDCRfK8xoCW2TBPSRmgXa9nCiPige6GyKBuDGGSTBrraItASIyBn
      hSuaU8z6WcILsdZ18FIb3jd9F2/rVnh56QgHp2/AKdzAmR+j7qhRoNtAHoXRmGW9slZA2iAs
      0ArMxXHs7SnFv9jU4Pm2w2xg8ULH/f/be+8wu66z3v+z1i6nzpkzfUaaot5lS7JkyyXucXcc
      Jw5JCCGESwmEC1xyC1zuE+BCCPcH4fcAuUCAhEAKDqQ4dhw7jhPbkptsq1my1btG08vp5+yy
      1v1jnzkzI01RszWy5/s8o0dzZp999t7nfdd66/clZqpxQZWEqVlluiyPuKjyV55XghfTIeos
      xdpYUJvT51n0506SLY2ywhW9Ik8fepIb590ypnNXYyqPueGgNEYrhSSGwkThlH1RQAhKbgZh
      STyySCyktCu5J1ensfw4pmGXn5WuOMrT9AOMx2iWWDAyal6Umxl8CggM+ksJHu1vIuubKCGY
      Y+dYn+hFCEiYDrVWiYT0kWIyd3l6uBqeHIpyVdvPs3YhHC/CU0Pn4n1c/uhxCty/7EH+fdc3
      KHoFbpx3G03Ruor9fAaERBx4AtG7G912Hbr9+vKAi7NH3NBsrHJQGlZFXNpCHtYEi5ghgh+A
      aqm5u3Y8Bfoc2yNqtJEM1zBUHF21wmYYKcSkX+QIZ21QyxOjqKDTMdFUUW25SFXClLIy3WiE
      Qt0wDEqFAkbYCkKjWqO1Rko5mgibEmPKldGCrG/ySqqu3JQcOL5VwmFhLM+RQhXHndOmfuig
      QCokPR5qPEy9VeLLJ5eRPcdxN7MANMQMn482dFJnVVHwBZ7ySViRcfbzOEgTcfApxMt/idAK
      LU30HV9A1y8t129dAgiDruIwW06+yI5TrwGCB1f+DFfULUOc5e60NWfzo1QEtObmxACrqzrR
      WmEaEYQOqHtG+k68vCRiJzAMs5z09TEM82x3gCB5JbTgcCHJowONZ5BLpbA4mYpN8vbg2JI2
      6XHi1FsOVyWGeC79Dpvf+xbDFpqlEZeNVRnqjBhSSeICMMzJV34IVv+BvYiR0mXlwcABdMPy
      t0cBhCwvgmOWdu3TZMW5b8FdPLD0/YFJ4jnnZJpZOqg9S5iCTqeGK3URzXBgWlTkUyCUQEsH
      TxUxjHi5Hui0QdlT30DwQQUvyvPp2gtiVjueS7A6lmFJNMNzqYYzMnOzmBitlsfdyQIN1ggF
      +TlA+ejW6+DgUwjloK04es5VgS/wVkJIssrjyNBhGqINNEdqxynqvw9EKSFYEXLZkJhCgSfB
      sqiLa4SoUp0UnEE85hM1JFp7lcI6jY+rCoRDMaQ+MzxabonUk0cKKlleueD1MgAAIABJREFU
      wSnPYMA1z9t5BRjybZSWxAyfxZEi1UaEaNkSOp6Ho5Ow2r2bYWrNh2rzRIzzLU/w0XM3wN1/
      he7fCy3r0FUt5+wDnBsEGd/jL174U/pzfYTNMJ+86lOsql3ECFvc3JBiczaMQrBhgoEb08E2
      TfTAK/ztjq/g+i5zEnP5+LrfQBr1JKVL1pO8mAkzP1LiylgRKc40uU2lfLR0kWLy+h+BQTBP
      OFCEC0GfZ3OwEGV+uMC6uE3HqcewO1/GQ3DN2l/hEdnOgXMfG/WOwqp4kOkeQbWhiVgX3ieh
      G1ZC4+pAALUGee45mCnhlyrCjZC80bezEqYteAVePvE8q+qXQZmZYn3cYWvOpss1OFw0WRCe
      RCGFESTIINi1VHmVlCYvHNuE4we/d6ZP8tXX/pqPXf17fLEnUWacFhx1DeaFNDXmmeaeqbXG
      81xsy2A0+RXCFIE9X3JyGIaHEBZSj0wAvAAlEPDjoWZuTA5xVWkP5ktfQCgXC9DDR1l/19ff
      9QrQaMHyce6U5FzJyqaEOEcT6iyhlTuqAGhqI+NzEnXR+rIvECAiNetiDs9nwzyfDU2sAMLg
      SKaLh3d9DU95rJuzgXsX3V1WNk1tdPxndGdPYfmDSJEgaig2Ros8lYnwzYEYCRQr4i5CwYKw
      y7ArMQ3Dxlci4FqRBpI4kaxE7vl3AELt76HQ0IIWKbafxsx2vnC0wcvpeq4xjoyLXFil1Dud
      tfwsodn/2rM8v7uTm2+5mZeeeYJ8SbN04x2UuvZyy113sXvTM4Q7qvnhV58l0drBe9+7mO/+
      YAe//gsP8KOXtpEs9PDtp7dw3W33kcidoDPjYtfN46ZFYdKJFfhHttB49Z3MjZUXPT/NP3zh
      77n91z6DvftHDC59L1fUThGl8/PsOzLIkkWtEy+HWrG4ZgEfWvWzvNq5hbbqdu5cdPfo6l3G
      mpjD9rzNyZLBrpzFyqiLEGNMciPEV7Z9iYF8QHb1w31dLKlfzuKqOeA7PLj8IY4PH6UzfQKA
      ZLgGJatIGj4/U5sjJjVPpSOkfEkKyYlUMH2eTBCpNG7/1Gf/MOu7xEUa07QIy3bMx34NcepV
      RP8exInnMea/D9cusjefJHWRaEpsAVdFCojDT1WUwK1bxFD7fezOgyXg2iS8Jwmr42BK6H6X
      FLvNDxdJH+ri/R+8n1TPAermb+TOW9exd/seVjVLjslGBk+dZF5bNccPZ2hqbaFlTgNmvp9h
      qsnkctx55z04SvPQfXfQPZTn/Q/cy7HDB9hw9QZeeeo7pKuXs2FxS+UzBw7sQs5fxHBnmlqG
      KNS2c2DTD/jRs5vQ0SYOvvYMz+/YT0PE4pkXn2OooMkXNXL4EN/+wRPoeCstSXtcVElon/nJ
      +VzfcSOrG1ZiTRBxCkk4WTQZUAb7iyYKaA/lGSFqE4bNUwefqNCug+bq1mupD1cDGlsaLG9a
      g6c8GuNNvH/FhyjQzMZ4gRozyFvXmQG7+aAnGaF8CawYgTnoWbxRWMSdNT5tIkU0IiE72vcr
      nCzSL+Iqg9xkDdVnAw2WVLSYDs0hh37HYquxgKtu/Tyye2twuyt/hqESmAJurlV0d36PLx3f
      BAjet/wh1iWuZ1v6XbBFCElEKrRSGMLAcUooz8SXksYVq9j2yBMkl6zCMiWLVq5hyfJmhJ9m
      7oprOLx9M06ybdzpil37+NwfP8nG+z+JtBO0dCygY8XiMUdoXtn2Knt7XfJmHfPW1uBmU6j6
      +Xzkyg5+smU/b+x5g9r6Jvr7e4m1Xck1S6I8+vxJLKMb5aZ5+ZW9rJ23/sx7Ue7UIVqC2qP9
      jgVC8Go2xKqwTVVoCFuHQPksa1jBKydfAoISmMZYI5WQqlY02DF+dtVHRz9vzNRJKWBl1GV5
      uMiwb/GtwShD/qgcSwAPyfZsO6ZpBVm06GidjbaiKNMmLGyqjAuLGbfbJY47Yfodi6sTGZrN
      PjI18/Gu+DgZIWHLX7Ho8Ff4cH2JVrp4Yv+jpIrDpIpDfG37P7H+nT/qt4wQjW1V/PPX/g2q
      2+h841m++vXv07FsOZadxLSLtM1pw0TyxmvP8IPHn8OzQ0TCETaunU86FQhHbU1Ah9K4dD3/
      83/+D8KZLgo+1DTOIW6bpLsP88aRLvALJDuu4Td/8z/zgWvmkTMTVCfipA7v5FuP/pRQUztL
      21uIxGtIVFXT1lKHkBa11TFMUxKuqqe18fyZPBaEPGIVmkRBrz9axoDv8PErPsEvrf80v7Du
      V/md636XWuu0rjd04BP4pUnzGlIa1Jg+TWK8nyG+vrdP7yxYhKXHr8zdjSBGLC2QbwQ+gO64
      ieKcBXj+MPtyDTw5XDelH9BkFaizi6A1p0pRhv3xWeEr47AuEWxAb2Y1Qiuu6vw61Vv/AUlA
      rpLe8GlyHTfyx8/8/rj3fu6er/JPnQL3HV7zcGtNYP691ejvPIJMtlIbm8Cs9Uo8+9RjnEgJ
      7nrfAzTEpnectZufdrWfDD2u5OGBGDklWR5yuLehC6nsUUJmMcIyMcHAlLOEo+Bf++P0jrFk
      xjfEaI0WafKJBOZ1vwCAr0so+nCVw+KozyvZBIOTlDBb+DzYuB9LeGjgyf6F4xTgyrimKvsM
      X3j12/ja5/aFd3PDwvtJ7OupxDgMIJHtxjjxIn8xeARTa7aG4hSEgbXnG3xi0Yc47AQJjWrD
      oVakQEhO+jX0O5JdWXAucwU5WICI9Lkyej5JEQHSGs2+KofJBKauqRnw0N7E4ceb7ri3/D8X
      7ZVr9H2vXHKsz+zN1eefWGuyFHWmIudITrom3YUQ9VYaS8YQxCpZ7PNFxhc8OhgdJ/wwRgF8
      LUgVNXHLQ8lhPJFGiJGh2RLDMHHdPFdah3nGXzbhh6yr6iMkTYSI0luMcag4fhnbkPD53JZ/
      wy3HbZ888Bhr6pZgDOxnZAP1gVR1O5Etf0WkfNM3lEtm9Wt/Rzp9kn3RWnJOlqyT5ejQIcLS
      5NbqecxJzuPDCx9iXzHCtgx4l6kiHC+C52lWWg7mOUY/fWnx3JGn2df3Jm3VHdy+4L2Ez7vs
      8EwYgPZLFEs5IuFJeP8vEBkl+fpAM7fGDa6IprHMC/+cbw9E6fLO3MUqr7jK4PGhZVwTO05b
      dBi3lCvzvguUrzGkSTgSpdXsZVlkDnsLVVTyARqihseVVVAcgmjvNiJ2FR9oaeIHAwal8vMX
      aFx/dIv0lUfmxT+nfWB/8DswsPpnqV36PuTL//8ZFyuAvqM/ZUvVaPRCas2D6VNc37cPBWw5
      /DTFpQ/wnpYHeWbo8nWYT7kGWSVInktzujDY0buL7+z+NzSaXT07MKTJ3Qtun9Y00WWWj9Pb
      KCf+HEEodLodfuFoNByOM5psfTlXy/xIloj2EeL8AjBaw9GiSU5NvJIYH/iN//6HPV4w+Lqg
      LQ6U6jlZrEKLMHURiIQkdsjGskNIITEMwdJYgRbLoeQbXF2VYkE0w7JogepiCvuHnyZx4kVi
      xzeT11kiczdyopzYqrEEcT1EZ/oEGriyeR03DBwg7GQrF2Su/lm6ovMhdxJr6PCYTuRgI99m
      x9k/xgmqVR4fy/URImhwri8O86VCPzfNXc4Jv/7yNYeEYK7p02Cfw+otTbZ372D/wN7KS4lQ
      grUt66Y0T0ZG1Qb94NMsGsIgp32GnByWFTm7qiTDLmdy5ZTXMT/kklPQ7QY+iYvEUz7NZi+2
      EZ6wEX4qlBT8JB3mqUxkUmr9Ca+/x6umx6tmZ77IUuM4qxPD2EYJy7IwLIHjZemIatqjg0Fj
      tajDlrW4h7cRKVPVSaCx9w2sdbA3BwMubB6S3Dr/41zXcTNoRTjSSlF5JPZ8FwHkw0nSiQU8
      0Se4+arfJbbigwityXW9RtXwMTKRGrJWBE68ULlWRwgKUhIuF3alpYGvfHx1eRcVRSXURU2w
      LJQqBhGOCSFGWyC1z5L6ZfzogIWnXKSQLG9YNWXRm8bHIx+QUU0nYEJyPNfLP2/7Bwby/Syo
      WcSvbvh1pirSUAgKO/4Fu3cXTtMaIqs/ipxMCaTmuvggO7MRVDkjuqtQx+JwhpCVJiRqz6q7
      TSnFnrRipxPjqDdxf3DllkaiQJNCa0L4XJ0YYFG4B8vwENrDEzEyXpjWSIjQqWPozX+C6Tvg
      FUebw4Sk1LCS7C1/zlf6qyiV2dRHWugkcE+tQ9OpHxEqDZOdcz3PeAs4WAj+ZpcH0yyLBQKh
      CJopuvueI+9kmVM9n/poA5uf+yw3DB7CFYLvROs4bIb54KqPkk7czZ7ctM9rRmJNJM2pE//K
      0aEjXDX3au5deie+6uVMh1Zi6ki5YheEEeVoqo+DAwdoTbSyvG4RqKBRWpQHGI6QGGi88pxm
      MIlPL1xGiK/t+jovlXl8AD6x7pe5pmnNxCu7tMjv+z7xV75Y3sEF2Ws/Q3TRHaBGR+rC6KyJ
      okrxg/65HPZGY97XVA1yXdUAIWonHdEFgbmzJWvxQtqkhBmUeE5TuTD9DiYEJUw2Z5rYlGqg
      WmeIGdClqjAN+PkWRdPLv4VVdlTHvVUrwr27kIce5c75D7JpyGLYtyo+AcB3+20WVt+PIaCn
      AMPlgIQCiuXjtmfGnBOTBZHbMKOw1YdEAZZc9ev85fa/J17KcHMxxXony97DP+beG26muxRh
      6K0senwLEJVQr47wo84tzPUcdmZPsahuMUvq61D69EIphSdygfALA60KtCZCtFevQ2iJ0sOj
      /dvaROAHY03R+KKA0DIoG9Yep/NCnQlN2Bwf1g6b4YoynSmcAjPdOcaM1ZiZThQKn0z5OsaO
      xNVIA2rlECeI4pZ3JFkmMfd0rswaN/5ztNbkPUWXa/HTdHRMv/r0OKeqKCElaapJB1eFpyHn
      y3FDlCeC7N3FgsQcqhuu5eE+a1wcXxOE/SZDRMLttdASCpTj6UE4NOb4HiBZvZY7F97Fwle+
      yFKviAbmd+/ksa1/yR2rf5knM42kLyMlMATEhOYXsz2sdnI4QpLpfRNRfxswSaWgGKGvAY2D
      r53y4irKbAhWea7DCALB00Lh60LA/1QxgYKJ6mfY3L7LbQvey6l0J8eGj7B+7jUsa1hAUfWC
      CKYDGTpcHkThB9w7bdfh7X8cUzm4Rgi/dSOQwpcTb80CwcaaNCsKHtucVnYXbQacEFqXhwEK
      F0vHy0qr6cyWOOxFeb0QI6ONc67TnN4EmgaLo/AB8SZq0x9hZU5hlEOXjmFhReoh21U5Nlfd
      Tu89/8Y3us/u3LUW3Bo5zP998fO4ykEKg4+v+U8ctq/nyBglWBKFhtRjrHvhz0mWt+K0MPij
      ZDsNdUu4Y+1nebz/vG/xkuAhfyvLNv92Jf6tk/Nx3/+3FP3jlWMm41g9A5OtT5MJy1TrmQAp
      wghslC6gT6/jH2HXKa+tQhiYRh1S2ChdwvH7gq6v01MIKECh/HL3YKFIbWQBw77BN/tjrI/3
      0iF7GPbiHCgk2FNK4EoTIYM23fMtUL7gGtsDefiuXkHfPf9C18I7yAuDlBmm/6pP4d72p3hC
      MlJ6ZOT7CJ3DJzZacKh/F27ZoVXaZ1fPDlpP82tcDaad4PvROoaFQVoYPB6tISckESuKfxlG
      gk5EFkCiffSFjhuDQddCVX6Cpu+zuDkBUkawzRZsswUpI2PMIgOpQ5WfYIA2k/8AShfxdfpM
      4Wf0OC08tPBQlHD8UxS9ozh+F5xBmjzqj4wTR6HxRZ4qM8ODdf08n2rge6klfDezgF1+A54Z
      QshyyPQCot0XpTD8QB46i2FuWfO7JNb9OlpI9pSqaTOLzGlei9m1FQF4kTpiuCQMi/Q0SUOt
      NVL4QQ35GDTEGsmd9t6TRbilcR2PJuawww4K6T0zTHOskfcu+RCbznRPZjwO6hquuvUL1HQ+
      C9F63LbVeLqfEWZuIBA07aDLFIGTObFSRDkylOKxPV9FA+9b9iDza5MonUeKCEa590OpPAKB
      r4vTCtVIF+GIAp4v9xD44+ZLGwa4brDg+aKIxCImPUraoKQj469LgyE0ptAYSpPn3E2g0TzA
      BcLVcKBgsCUf5ZVchBMlQVpZrGyswTz8NAKNXUojcp20L7uZeWHoiMCgO+rsAtjCp8UssM4+
      wOp4D/NqOrBkHF/7XNm8jnXz7uHZ4TB6hHgGwYqYTzH1Cq91bsEVEldIruu4iQ9f9RmeSifp
      O7/ylEuKgoLdTpyh2qU0NEqk1GSKEfIlk5idRFOkQlAmNCMjqkZpKinTV0o0Nfzdli9yKn2S
      4eIQhwYPcn3HbZjSQnbuw379Yejchqhdjm8LtJjcYRohTB6hHAmUMVi9z1UJgpW/zDGrNaas
      xjLqsGQVvu8gzaBd1xCSAc9m0LMwUTTbDk2m4rpEhmtiOW5PpqizNHsK4XNWgLemNagMV0Ok
      ODRukJrd8zp1m/47bble8lUtLL329/lSXxynrATLoylurunE8xxc12V7xqG++S5+a8lN+KpA
      TnXxUGNPmYBasC9fzfVJl5dSmXGfnSml2Z+H3ss4HVBQsD1jETfmYKRf4XtvfAtHuWxsvZ4H
      V92FyylGZjSbMo7ADMykEcHSlFnSGEdClXUyaC0x02nk5s8h3Dwm4A7sw3zfF3H8UxNej6Jc
      V1QRslHzS2u3vCdMzBR4+nSgivKI4G+GTLKr+zg/PfRjTMPivqUP0BGpCvwM4XBnbScbvSgG
      mgZLYxBFahOwAAt5nl1uF7HP7kwooGjGyqzF5WbKXA/REy8gBg8QPbYJ+41/4aq4h4EiJl3W
      VPWB0JiWhR2yqbEciirDcHY/eaeTkHRotIs0hqDNrOXOkEO8AGub11Va8KJWjA1tN3LwHcIT
      2hqK8OT+x8i5OVzf4eWTLzCQK2GJWgJxambnqS6eObSDdCFeMWmC3UFhmkVunHcLlmFjGTbv
      mXczllnCcHLIMXMBzGx3xakeGWQ4MthE4TJe+MEQCXxvDsVSM5I5QRhW+BX7f+QHATaNRIp1
      hNxGpIwyMizR1wGde64U5ps7/5Wjw4c5OLCPL2/9EpZsKO9gLoYsUGcPk7SDWV9iTGbX1/BK
      duoxsJPhLd0B+h040nAjC9b9EuHe3TjSxPIdZOcWILjeiO9yXbKb1nCeqNQkrVKZ5g+EkLSH
      C9T7fRiGxK5MqBSE3CTmM3+A6N4OQMOVP89nbvh9ujKdVEcSDIsaugdGhnhf3igpiNlx+stt
      gZ7y+M4b32JZw0punH8DPzn4Ux7f9wgALxzbxO/c8Blsq8CIr+DpAe5edjNr51wFQHNVFZ7u
      xwgnMOwEhhM4SW5yHhq3kiAbSSKdzhqi0RjEONyf4l+3/yWZUpqlDSv4pQ2fRItOgpTXaEjV
      VA24m/4CeeIlVLga/Z7fw2hpxtMZfM/DtExc36fojYb2MqUUIFAjsw4qYV4fXzgUtcJWQQnl
      jmycY875ifJF8wEmwkiMP9+whv62Oxhqv51qWcQ8+RKg0UKSX/4BnmUF7eEeEpaD55WCmy2H
      bgqFHOFwGNOyRndcYRAeSiO2f3k0ODF0CHvtx4hGhqmyEzSaIa6IQo0t6SyJy7YyFCDlw3tb
      5nIqfQzHd/CUS3++j319bxIx4+zs3lZhyi56RZY3XEFN1IIR4dGgdYG4LYjZGp90EEmyo9B8
      HTJUjd+yDjb8CiVjACVKZcbvkbluI6Nt/YrpYssmHn793zmVOQlAf76PtuqFNMRjaEbsToFB
      GNF1jOj2f8ZEYXoFvGwP5uJ78cmAAKV8ImYd+/oOkCoF93FF0xrWzF2Jr4cmXNk1Hr4o4ePz
      yEAD7nkudG/pDgCBH7CtHIURgDH3Aebf3ki8MEA22siBxNVsG4AItaxL9uJ7CkSYcDiO73s4
      pSzRmMHIXFeBmJS5WqMxRTVD+18k/OrfYvsuzUvv58Erf4u0svE1HCtCayiYKrMjyxkRpZmI
      UyV4icV89Jr/TWfvc3xjx1eA4H6PpY6wpG4Zx4ePAkHxW1NVHZpAkEaeW9qz2Z2uJldOFq1P
      dJO0hvHro/gNDwDg6UE0PibNDBd8LMMgGirh6QEmSg4YYrzQyTG/6zGGrxblXtyRhOkYpmYp
      jYBfVvfz6Ws/zZs9+zGlyYqmxZT8zil6ryRCG2xN1waVnucZhHrLFWAsNPBYPzTa12LGA+Xo
      Gwj+NuBEAE3Ebiac0xhdBwCwWzfg0kMQaCsPchUebs1crNZrodwrqq/8OK7OYct6wlv/gTov
      yJga+3/AUKia5p6deFaUVXOvIdy5BaINLFv5n/hWuo7sZaIEj/bBfcnlxKw4OTeLIQyubF7L
      6uaVJMLVDOYHWDd3I7GQi68DJ7izkOBgsYq9+QRFPbrTd5fC/FzLQbQo4elSpSLUooXvv/k0
      Lx3fTMiw+eCqj7B6TgueHh53Pa4a4O4l99Gd7Wa4MMgVzetY1jAfjxOVYzRB9tZuXkx2we3Y
      R36KH6lDr/1kMOZIB7uU8l2k6SHo44o5zeV3nkJMoHSMOXtR2ezIJS6IqeSCM8EXC0vCg9zd
      2EUkV4X5w/+MyPcHpVLt78G55fdw1SmCB+MGzpUyiYg2RriOHMPD4SQxYxn5rz9Addm5CzZw
      gTUmZVQp1ltwOy+u+SN+OvT23uuFYEFEsyHcw4nB3TTEWwlF5+CqFN1eE562OVzQZDyFpRVJ
      y6XLjVTW4vHQrI0Pc1VVLwLBkXyUebEUbjHGn2/+XIVsqjHWxP+69fcpqINnnMEgjtSNKC0w
      pIPLKUbnk41CYGDTgunbaAmezODrAkKLss8x0VDFqaG1YFt6Ls+nai99IuyiQAQD3IxsLyIf
      1C0IgN5dSGHgiwJjt2EhPYocOaOC11NpUis+hNz1TUztM1jdTuPwsdHzjcXwUZKXXvfPCYcL
      gj6nmcZoMwcc6MsBJMYcIQADB4OcO9XNCbZna9ieram80pBv4K7EAKY0KwoQtiJMRmTvk8UX
      WRBMIPaj0PiUOEnJEIREM+ZghpBbxKuZi2tl0DroIT9rQdawPdPE8+kLE36YIQoQlh7rqgfK
      jc/Bxle5LwGB4J+dF+vobuqvfAAW343UmoRhk33qv5IcPgKAK01sFRSF6YV3cKxw+UWKMj5k
      piggPF/0uSFSIsH9yz7AD/d9n1ioiodWfgRH9WKKGoKxqg6enoZOfxJYohb2Po/x2t8hfQdq
      l2De+Xk8M6gdsmQ9EhOFh6O6xlS+GgTl1IqiEjzR38EJ5+K0Y15yBQhLjw82HqDOKuJ5gnxd
      B9ErPg7HNwMCdd1nKKmBsz6fxsfhFEQDpZFEMO/+c7LHX8WzosRarkB17URH63AaWnAGBpHU
      oi4zJXhLoKGo+rimYzE3zP8z0D4l3Y1QNTx/9DUGcv3MSczl6rZVuJw859Obohpz7yMY5d3F
      HtyP37MX1boQI+vhPf3LRNIncBJtWLd/Hic2biATJWXw3b5W+tzwxB9wHrikCtAR1txWq2iw
      5qJQpAoH8IzDiLXvx1z3YQAclcLn7BUggBrzvwLCcpELl2ICBbqQ7W1Bua4+xa01NseKCdLn
      MazvnQZL+rSHs7jawfWDZ26KWp49/BKP7f1u5ThTfpI1c+cG4dRzhLLjFatVC4myIhgiitj3
      daJlesNo+gTO3u9jrf9oxfk+lI+zOdXI0ATMhHEDHmg450sJ7uX83jYBTvcwp0GjDfdGTpJ6
      8rP4hUFO1i5kzo3/C9c8jqs7Lyr3j8bDZ7Tv2D9touWaWJqXM7U4+t29C3ha0u1EmB8ZrR+R
      WPRkx9ev92R7kKLj3KpstcDxBrCv+Q2cTZ/HLA1TXHgnfuMiTIrYp7VtGtqvLGOHCzEeH2zB
      n2SXNgW0Ww7pbA4hbeLREBgS5Sss00T5Qf4im8miNFihKCHbwDLPekLM9BidGHx2GrA8BsUd
      /8T8gf0IYFG+n1MHnqR6xTVnhNzeSijhsjZxigWRDN/qaaOojGAAyOVLKHHeqDWKzI+Mt+81
      Lo3xpnGvNcQaK62UZw1lIKSPV5Og+55/w5RwoqiI5LpYEs/C/FswjvwEqziMG07iz78FpfP0
      lEI8PjBnUuEfwcDeHTyycw9tLStZFvNh9SJO7DrFe65ZTX/nEVKOZv+rL7DlUBd33/sQXmmA
      92zcePEU4NynxmiqlVeRMwEk3tKBDZNfhxIuCSvFR5qKODpQgP3ZGl7L1r+rFCFpnVk56Ooh
      bllwPVJIBvL9tFTNZX3rClx9bj6AlAKFh8bjm92AgDXxIa5IDqB8gaptQN7/JbSTR9sRiEgK
      fp5nU3PPcpyupljI4xIEBs+ISlkJ7rzvHswdh7j2inn8y5cf4/C+fZfOByj5PgOt1+KfeIm4
      X2IolMBpWUNcX5ryTS184nahUs1YXxN05h/IJygpg6IqVzm+gxXiUCHBG5kGVlb1jXlVo0QX
      tyxcE1SbUsDVned45pHn5qN1EM+x0NQYblAzpAVKZHHDAjcMihRSWWweauFUKXqWzzzKbfd/
      gEW1dfRt2zplWBZg3sqr2bh+w6VTgFfTBotab6N0dwchJw+xOqqrwuWs76XCSC29QAqT66u7
      uL66i7RrMeTZaBGU++7M1nOkOMlAwMsZQvBCag4Jq0hbeLR8WqPx9HClHigoZz773VpgMFwS
      VIeC3oF7ak+gVQNXJONAHFcPoUUez3UxTBMhTF7P1LG7UHXWC45dlSAZi2FbJuFkEtOwGDj4
      Kl9+4w1uvfNGYlYIYUJDbQ0IQX1dPaFQ6NJlghfYGe5uPAl+EaV8LNs6p4f61kCU/5XlnWAC
      aHC1wQ/6OzhejF1QGn6mwhI+DzQcoCWUIyhBMcZ1f8FIZebZecFaaV7PNrMm0YdGYYtm3D2b
      ie75Dp608Nd/Cjl3Ib6fBiFI+zYP97aTV2e3PidN+HTb9MdNhEu2A9xU04dUDkr4IP2zdp7f
      GoySS41t3JjkUCzhc3/9UbalGzhUTNDrhN9RiuBqgx8Pzufnm98IMvTjvhvFWD6fs4GQgj2Z
      Gq5MBLu7kXExX/t7rPJorNymP8b6ucfw9BCu5/KTodazFn4IChtf/ZyYAAAXdUlEQVQf65v+
      uIlwyRTgYD7JlbEM0jAxDANfeWUu0rcf41f7Md3fU8CUiquTPVyte9ifq+WJwdZ3lH+Q9Sx6
      nSoaQ5lyoVzQCnm+8MZ8t6byEGO4SsNuITizUHjS5nghdk7JeUfD69npj5sIlyzw/WKmhhcz
      c3AcD9/TuCUHPQ2/0FsHMeZ/p69407+1yS5gXUQG5pkAH8mxQqJs+gQlhReCBjPP88OtKC0o
      ReNkG1eVOwsE6fm34OuAJ8gUipXxty8Mfsl2AB/BtmwDrUaKeXYeX16ECZTnAXEezdynI2m5
      NIWKnHQuPmPypcSxYhVXKQMpL1y5b6o9wTe6VrA6NoRlDWPc9gf4vYfwpUm4aSFF9yTSEFhS
      syyWYne+ZvqTXgRc2tSngB8Pt+IWNaaMUCqWUG/19PIzcIGPQEuKvk32Ig0PnEnociIU1MUp
      EQkbPjfXnGTQCeOrAr41SHFuA25LDTnvKCV3lCnuQO7tm4V1yXP/BRFi23AiqAL0wHXe3jyA
      JIItWrDlXCzRzDltilogMPmP3jaG34EKgBC8ngka7y8GFsaGmB8bABmEU7NOCU/lQCpC4VG2
      s8WxFLxN5vAlVwCEYLdTT6boEwlVUyqV0NrAFElMkURyccpeg3bKsbcrg5nIpWpCz/wFoSf/
      gNDLXyVMK2f7WASSrZlaBvypKbgvZxwuJMb9bhDHFEkMLmSVDhgndg7HOZGzMM3xi0e9lac9
      lH1blODSKwCQlTF2Z8IYhkEsXE9MzyO0azPR158j3D2MLVqmP8m0GE8iKABLJDG2fBFx/HlE
      93bkvu9j7nsSg7NIcmnYnqnn+dR5liFeJsiqUc6dEC1wsovIrk1w7Cgh5p7XOSVhTN3O+tp6
      WqIdSEbKm4NmnpChuL/hxNviDl7yfgAI6E/e8FpZkXmDpprFiGf+DKvMQW8ZNtz917i1ITSn
      D4kI0upn8Qnln7FU3AS0H/5pbMtesdzAPfUZHWWyI1NzifMXbz06QgW0VhjE8Y69QeS5P8JA
      E0WQ2/hfMJeuQelcOUs8fSJTYJIrJvjKa3/NidQx2pPz+MX1v0xVSNKXLeIrn6aqBJYYPLsL
      PMcq5NMxIxQAIC+i7M1VURf3iKbGMCD7DmauD1HbdNoKbpRJk6Z68OPDmyAriS6BQGkfnZyP
      OPFi5ThdM29S1okRpNwQT/R3kPLtd1TsfyJsqA7YvaUIER7Yh1H+Fgw0sf69lJZeE9CblGGK
      GmzZgNY+ju6uhDdH/57kxWMvcjx1FIBjw0d46fhLCARPH3wCX/tsmLuRD1/xwbO6vkXhNCnf
      ps87vyaZGaMAALv0Qt4jc3h2VWVUgxYS34pQKpTQRgnLshFCcGbyavySPUIZePprI0oDAWGU
      u+7nsKrbwcmiq9tx5yxB6YmpAUfQ48To8c6dh/JyQ71RIGkWGbnRfKyRGKP0vPl4I7LMFSQw
      sEQD204e5vF9f0PEjPLhKz7G3GQMn/FKoE6z7ZVW/OTgkwGTBfBK58vcueS+qS9Ow/JohtXx
      fgq+xWOD51cLMSN8gBH4GOQ9jbz5D3Dbb0C3XY931adQLSuxrTClvIvjlACBKRoIy3lE5Hws
      0cR4aRytX5kosTX6mqKkj5NfsILC8qsptDThTCP87xpoWFPVjyWD3dLTKazFN5O98hP4bdeT
      XfURrJX34+qgc0wgyRYtHnnz2wwVBjmVOcm3dn2DkGxhrJh5OsV1HdcxN9EKQGuinevabyRq
      jfpdtmFjyKnJ2qTQrIwN0BxOUxM6f/rvGbUDlJTk2wNV3BPLUX3dbwWlEUKB6i47yElyhQFi
      ofkUDr5K5PV/RWgorPookSXX4RII77klthSK7LmUtrwrkDA9lscKKOUH5FUIHNmLueZeXGFh
      aQ9H9zN2QIen/AqbBEDeySPESCHdSMJRUx0p8dvX/xdKniZkCEyzxEev/AT/sfubOH6Je5Y8
      QDw0CdU7mnqjxNWJPuaG02jA8fR551BnlAIgoNcz+erwXFbok6yyh0hGHCLxMNKQWKEQYeKY
      ro168S+IlrdMf8tfYc67AbecsxmdO3XhWd53KwwV8O6rcfN5VcASN2axGH2+mmTE4vqOG3nh
      2CYsaXHv0vfhqsGy6Tn2LAWQBULl78vRHkubkvzv5j8CBAWV5nt9UU6X6MWRNBsTvdRaBcr0
      4ABsGW67/J3gcRCCN0Ubh1yX+lKaG4qd1FT5hKImoXAY0xNYY6YSRrV/hl0Z2KXTFLaVE1ka
      b9wDnQ6H8m9fpvKS4TwEyqeP+5e/lxs6bsSUBolI4GcJLGzZhBQ2nkrj6tPnVWk8ncLTaQ7l
      atiTr+No8bRnrDVXJ3qps10MkUBpF0UejUbK8xfjmakAZZSExUlZy5OlGHcZh2mOBIMgXEOQ
      bllHfdc2AAaariRunXkrI80tk+8Covx3C63ds1KCvGfS5Uw1GfedAhHM3ir/9+yg8OkhEZUE
      Qq0RWBRKCb7y+lfoynSyse167lxyE47uHFdWnfaiPNo3nyE3NGlpuSFiDOdL7O7ZTVO8iWUN
      rRT8fo6WJv8+IhLWVAUjdw8XgmlCY7/lGa0AEMTqUyLMft1Kg3sC0zbxRD+xWz6L07sPAYTr
      FuCJ3knOMIVxKFR5POhIId706HUiZC5SfcxMhovE92sRZjcj+ROBjRQ2WisUUw1fGA0jm6KG
      J/c/zpu9uwB4Yv9jLG1YTkvCABn4C1kvwvd6FwbUNJN8VTFT4Hsmf/3C58g6GQSCn1n9MeLJ
      9fiTDMmrMuCu5BBbjzxGppRifdsN1MbXsnNM6fSMigJNCcMuDxc0QHsos4dSYxKnuY6iPoE/
      5RcyCTRjhD/oTZ1KD7SGQ8XE5Ae8g5BVkmeGE1g6UZ7FVcVwPsLLxw6xp2cAW8xhfJ7FxBQ1
      GGK86SKEQcYZP70n5+QwymZLzovxSN/CaXmZqk3oSR0iWz6XRrOrZyfSTE66Y1yXhGf2fo1N
      R3/C9q7X+Mb2f2CJeZLYGLdmxu8AEGhpzJSE7Vo0hUBGtY80NcViFsOafCL4CFnrxC2Oo62P
      I+9WZ2SbR6GUYnf2wvkoLxfsKtisd2LUhDyG8gb/36Y/wfGD53PX4vu4c+l1eHoAQ8QYzJm8
      1rmFZLiG9a2r0aIXUHgqxS0LbufY8BFyTpZ5yQUsb1iIW2aR3pqqZ8ibvpaq6CuaEm2EjDCl
      cvZ+Qe1iuib/uqg24eSYpGrezVMq9WOJ1sprM14BDOCeeliS2kE4ncGJNiLrmnEZyVAG9uZ4
      CCxRjyWCmnJPD53JNaSDVWv8S1NngI8Ua99RrY/TQsCjg0l+uVlydHBXRfgB9vS9yT3LbsPT
      kqIT5Uuv/CV9ucAM7c3ewftW3Iqr+1DkmVdbzX99z/8gWypQH6tCid6yX2awumqIPYUaHD11
      3L/FStEcV/zK1Z9m+6mtNFe1sKTlOh6ezPIFukuwonE1m47+FIBkuIZIpJXiGKWZ8QqwIg5L
      T3yb0Ja/RmofS9o4t/0psqUJRRY9QTWORSObDu/gp4eeQgjJ/cseZN3cBfg6Vc4Ee4wM24DR
      MrnJaLq11mhtcqjw9jRpzCQM+JI38lGqw0mkkKhymUhtpLbCENGXG2IgPxrZ2dO3mwfFfRV2
      P0+nCNuSsC2gHLkJcgNQa+WIGx6DU00p0tAWyeDpYebVRlhYdxdKl/jxgIejJ1+QXk7B3Qs+
      ytzqDrKlFEuaNrAlXz9uKumMV4CkCeHuHYhy2NNQDqG+3RSb2/F1lmIxTzQ+vhMrV7J4bO93
      8cvNNQ+//jXWz/0rVDklL7BOM4nKs2rHQGvNsGOzL1fPkCPJEabTfQdSoUwLwdaswS80L+F9
      yx9id89OqkPVPLjyQVzVj8anPlZHXaSevnywHC9vWIWvT/fJJt5dTzdN76ljwmHqzaE6QnLU
      /5IiwtrqKIum+UqEsLmm/WZsAZ0lWGvC2jFuyoxXAABHSELjfhdIYSAxKRZyxKrG9wworSvC
      D+Cp8oTDcs3K2GW+Mqt29AWOFWIMlcK8nG2kxDuw0eU8oPwst8zfwK0LN6JRuKqvUoQYsQv8
      6jWf5tWTr5IM17Ch9QpcPYVtUoZAUPBNHDUq8UtijHNSR3GmpLedY/1b6wTHv6VD8i4Gcj5c
      OX8Ffv8bGIZNqWEl1oZP4+kMmWw/diSEaZrjnGBbVnN8uJOBfB8Cwdo561kzZzm+zjA6BlSh
      cQGFFkGDRknBI70LeDXbxDEngX/69I13KbSG5ZEiwhjEY6g8i3hsablDxPJZUr+QuckalDhz
      pphBNZZTTbhoIVQcYYbJ+w4nilXsyddUfKu1xim+9c/fYOvre2lbsZpj23/MU6+d5Ipl83jp
      5edJWgb/+E9/w9Ztuwg3L8M9tIVvvLiP9SsW8p1/+gLpqsVkt75EprWVGjP4/vZvfphv73S4
      anENX/6Tz6MWrmROIrAaZvwOMODCw9kmHrrz/2IKHwvQfpGSm0PjEQ6Hz6BT0bKXX1z/CTpT
      /QghaEs24OoegrqfkVoVjRaj4z8LjuJHw4vpdN8FWd5zRFZJ8sompCcfRqfx8PTEs6YENjpV
      wP/xbxLK96PsOOqmP2Rz6CrezJ0W+9caKxJj6bprqQ957Elb1NtFipoya4jFDXc/REdVgZ0n
      BunLOqxPKvpKmsala0gfeJUQJqEx+heubSHSP8TwQB/h2jmEhWLzD7/F/n7r8sgDdJYg7xTx
      S5mggUUrPM/FskOoCXjUNQ4YXbTXStpqJFr0wIiDK3T5J/jSRhjO0n6EE6en32cRoCygpo6e
      Vb5QaBOhbYS2kSqETS2ho5uI5fsRQNTJEjr0JLXWmbH/ULyZBz5wH6HOrWw9dJLnnn+W17f8
      hNeOjGSvHDb/8D94cksP65ZavLTpRZ575WV2vnkKYdisWtjArv2nc5dKFteFeWXnHuYsXopW
      JXp7hxncu3Xm7wAANhoTjTRMfOWSdwfQeBQLORKJJBIjCGHqkT6BUQGfumNIVEKf0jDeXSHO
      c8TRkkmjbZbLRvygSndSBEWIQhsYhEAb+EKM86YmHtwHTqabHz7yI0qEuHZBmg/94mdYWOfy
      2u4jxOJVSCvGnR/4OEs6Oug7vpcPfvJTLGo0efnNk8TjVcxZvBzjB69AIcWr+wfYcMUy7EgV
      865o5+nHN3Pb2jnk7cBkburomDlTIqdCh+Xxsw05NC4lN8dw4TimZeC4JaqTtYH9r0ca343A
      zBG6/JpNYOd7YzK/MnB+hV/ZAfqcOA/3LL3EdzpzEZGKn6tNEw/3MEKSi5iYwkZoO+jI0GEE
      MqC/zAv8p/4b8UwnuXASbvszvumvpue0RNZvt0/mBJ8b8sOnGChV0dY09a4+83cArVkdT+HK
      HEp5pIvdmLZBKBQOVm0gGAYtKg6uwERrvxLr1wTb8unl0cFKBsrXvD5U9/bf22WEgpJszoS5
      OyTKG6VReX6nI4gOmfgUEeXjRDRC6P3/iK8h44XYlAmfIfwAzw+DdVE24jlgwYFpWotnvgIA
      UhfwVBHPL6GFj+9rHKdEOBIN2iO1wektkmMTXeK0aI4uO8NaKASS19N1vFl6dw3DOB8cLNn0
      uBYNdrnFcczzEoSQZSPHF3nQCoRRDjNrPC+Nb6bZmanm2dTkPKqvnX9z13lhxjvBApBKobRH
      qZjHtExC4Qh2KFQWfpOywV/5mYrfs8JxLwRSGwht8XqhZVb4zwJemQdJo8b5ACa15NICtX8b
      Qwdfx9LtIOSY/IoG6ZPxBFtS9TPK15rxO0DY8JkXz+MrjZASKQW2PZIWk0gijDBEBC6ti9Ju
      RaCliFQqFH2dRek8uvzlSULsz9aT8t757A4XC/sK1czP1bA0PhLyNMlnHYwnfpuqUoo4cODU
      q7Tf/BkcvxN0MFlHSpPuYjUFMbN6KWa8AgDBAq8UUkqE8PF9H8OwCYl2jBOvIrXCr+5AJeqQ
      OofAwNdFpIxyZHCYpw4+jNaamxfcxrKGFpQuITDpKdbyk1RyVvjPES+nGyoKIBDEs31YpVT5
      d2jt34vEGmd6dhXD/HSo+VJc7pS4LBRAK43rOniegx01kVJiiUbMV/4Ruec7QXjfrsK7+2/w
      q2IEvD8SdDVf2fp/KjXkx1NH+ewtf4xthOlxqvj2QN27fjTq+SCr7GBlL++kaTNEVFrElYsG
      eu04c9CARAhBtxPmkYHWaSs+LwUuDwUoB/OV8hHCCux3YSG7d1QWb+FkMIaPoBJXoLSHFgqN
      qAg/QMHN42lF0Yvw3f7GWeE/TwhAahtFES1cEg3tdK3/NTjxPMPSpPrq38BVQwgEp0phvj8w
      d0YKP1wmCiClxDAstMhhGCOXrCulbcFvY3NeJlKDkIqO5AKODR8GYE7VXEKGxdMDUYoz9Au5
      XCAx0RhorXF1N7nWe4kvupcGy6Pk5dmVFuzN19PrhSnN4Gc94xNhG6v62ZgYwPMcSqUs0aqg
      KlCSIJJy4Nk/RGqFalqNuvZ38NVoIdbhYgxT2JzqfwWFZlHDWnp9zRMD77LGlosOTUcoz9Jw
      llNuhDdzVSjGP1KtuSye8cxWAA0fazpEk61x3CKeKozjkZckCMkGBAKlfJRKM7ZKUWl4PlVD
      jx8DBD0OFN5Zk4xmcYGY0SbQwkiaOjuPxkZKMA0T13EwrcAPUKQpeQ4mE4fWpIDF0Syv9MVm
      id9mMSFmrheoNWur+gOmcuHi6VIQ/bHtcbX/WrioKeaCt9guK8O5Sf8+i3c3ZqwCVJsODXYW
      IQJKcyknZ31Qoji+q2sM8r7kuHN+1NmzeOdjxiqAIRSmdPF1QIFhGObE1CciUAKfEj4OHoVK
      2LSkBDtzcdL+jLb0ZnEJMWMlI+dZDDlhauzitMcGpbmSfscg78fZlanCl4Jh12TAs2YzvbOY
      FDNWAUraIK9MahiJ+E+xWYmgtPnVTC17TxvqNiv8s5gKM9YEsoQiLKZidRsPhaKkZuztzGKG
      YsbuAFWmQ33IYTod3Z+rRmhNwlAcKcZmV/xZnBNmrAI0WQUcZWDLqScPPjnYjtZgCn1ZZB5n
      MbMwM20GDd2lKD8ZbDujm+t0tNp56iwHb4beyixmNmam1AhdGcc5HeaF0iQNZ/oDZzGLCTBj
      TaCzqVQuKcnefDV9fnT6g2cxiwkwM3cADQNumOppVvb9uSR93qzwz+L8MTN3AAHLI0N0RDKT
      HqI0eLPcnbO4QMxMBQAWhNLUmRNngR0l+WFfO8dKVbNhz1lcEGakAlyT6GVR1eQEMS+lAvbm
      WeGfxYVixvkAVdJhUThVbmoP+oBPR9yYvPx5FrM4F8w4Bcj6Fg93L0LqECBQSqPV+DauNVV9
      rIn1Y0/RBzCLWZwNZpwCaGBpPFMugLMwpX1GhtcQmptqukjK2fj/LC4MM84HqDUcbq4OxusI
      BFqcOQJVaThZqCGt3/kDq2fx1mLGKUDM9AgZU3euv5mt4ydDc2Zrf2ZxwZhxJtBIZEcpH8/z
      EGNTwmXyn60zjGB1FpcvZtwOMAIpDaQcZYWDgPDqcK6ajJ6hNC6zuOww43aALifClnTthH97
      JVXHD4db8GfeZc/iMsWMkyRPSwadEEV/9NKENkELCp6FN8vnOYuLiBkpTXlt4JYFfWT0kcRm
      fjQ3/ZRCDYvCBRbbeW5NDJ3VVMNZvHsxI32AfidE1jOJmUVAIQnCnUJD3PDIqqkvu8uxiRo+
      p7Kh2XKJWUyJGboDmLyUriNYvgWDjk3GM7FNRY05TfJLQE4Z9Lk2OTVbLTqLqTEjFQANNZZb
      bodU5LTgzVw1IXzWxDKzZs0sLhpmpgII2JFLcrRQhcDkQLaKLieMpyULosM0WtOTZb0t0HpW
      GS9zzEwFAEDw46Fm+p0IV1UP8/6GThpCJaSAjzQdY3kkVSahv3SolprVkdl6pMsZM1gBIKdM
      vtffRsq1OVaIBguuDiaALQlnaA0VLun1pbRkf2k2KXc5Y0ZGgcYip0y+M9AGGlZFh8n4FsdK
      0RlTClHSM+M6ZnF+mPEKUIGA3YVk5f+zmMXFwIw2gWYxi7caswowi3c1zLm2AtxLfR2zmMUl
      wf8DwkPckKb/0wEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='phase of flight vs accident' width='192'>
      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
      qNo31LqgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='purpose of flight' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='total number of injuries per year' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
